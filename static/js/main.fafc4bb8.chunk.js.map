{"version":3,"sources":["Img/petriLogoEdit2.png","Img/signupImg.jpg","Img/bgalact.png","utils/jwthelper.js","components/landingPage/Navbar.js","components/landingPage/MainBackdrop.js","components/landingPage/BodyBlock.js","components/landingPage/MainBodyblock.js","components/landingPage/Footer.js","components/landingPage/MainLandingPage.js","api/index.js","historyObject.js","redux/userSignUp/userSignUpActions.js","redux/userSignUp/userSignUpTypes.js","components/signupPage/SignUpForm.js","redux/userLogin/userLoginActions.js","redux/userLogin/userLoginTypes.js","components/loginPage/LoginForm.js","utils/logouthelper.js","components/Logout.js","components/authComponents/AuthenticatedComponents.js","components/Dashboard/homePage/TaskCard.js","redux/userTaskLog/userTaskLogActions.js","redux/userTaskLog/userTaskLogTypes.js","components/Dashboard/homePage/MDTodo.js","components/Dashboard/homePage/SciCard.js","components/Dashboard/homePage/SciCarousel.js","components/Dashboard/homePage/MDSciNews.js","redux/sciNews/sciNewsActions.js","redux/sciNews/sciNewsTypes.js","components/Dashboard/homePage/MainDashboard.js","components/Dashboard/calendar/Calendar.js","redux/userCalendar/calendarActions.js","redux/userCalendar/calendarTypes.js","components/Dashboard/Meetings.js","redux/chatMessaging/chatActions.js","redux/chatMessaging/chatTypes.js","components/Dashboard/messenger/ChatCard.js","components/Dashboard/messenger/Messenger.js","components/Dashboard/bioNotes/BioNoteCard.js","components/Dashboard/bioNotes/CreateBioNote.js","redux/userBioNote/bionoteActions.js","redux/userBioNote/bionoteTypes.js","components/Dashboard/bioNotes/NewBioNote.js","components/Dashboard/bioNotes/ReadBioNote.js","components/Dashboard/bioNotes/EditBioNote.js","components/Dashboard/bioNotes/DeleteBioNote.js","components/Dashboard/sciTools/SciToolsLanding.js","components/Dashboard/sciTools/EditModal.js","redux/userLacZ/LacZActions.js","redux/userLacZ/LacZTypes.js","components/Dashboard/sciTools/DeleteModal.js","components/Dashboard/sciTools/ProtocolCard.js","components/Dashboard/sciTools/LazyLacZ.js","components/Dashboard/sciTools/CollectionStrainCard.js","components/Dashboard/sciTools/CollectionStrains.js","components/Dashboard/sciTools/CollectionCharts.js","components/Dashboard/sciTools/Collection.js","components/Dashboard/sciTools/LacZChart.js","components/Dashboard/sciTools/LacZCards.js","components/Dashboard/sciTools/LacZ.js","components/App.js","redux/authReducer/authReducer.js","redux/chatMessaging/chatReducer.js","redux/userTaskLog/userTaskLogReducer.js","redux/sciNews/sciNewsReducer.js","redux/userBioNote/bionoteReducer.js","redux/userCalendar/calendarReducer.js","redux/userLacZ/LacZReducer.js","redux/store.js","index.js"],"names":["module","exports","getJWT","JSON","parse","localStorage","getItem","DefaultNavbar","styled","div","NavLinks","DefaultLink","Link","LogoLink","DashboardNavbar","DashboardLink","StyledImg","img","StyledLogoHeader","h1","StyledLogoMiniContainer","StyledMiniLogo","p","StyledHomeHeart","HomeHeart","StyledVideoCamera","VideoCamera","StyledChatIcon","ChatLeftDotsFill","StyledCalendar","Calendar","StyledFolder","Folder","StyledTools","Tools","StyledLogOut","LogOut","StyledDashboardLogo","StyledLinkLabel","label","connect","state","auth","userLogIn","StateJwt","token","useState","undefined","JWT","setJWT","useEffect","jwt2","jwt","src","petriLogoEdit2","to","StyledBackdrop","Mainbackdrop","BlockDetailMain","BlockDetail","BodyBlock","title","description","Title","Description","Img","Reverse","StyledBodyBlock","MainBodyblock","FooterDiv","Footer","MainLandingPage","MainBackdrop","axios","create","baseURL","withCredentials","createBrowserHistory","userSignUp","formValues","dispatch","a","api","post","response","type","payload","data","history","push","MainContainer","ContentContainer","HeaderContainer","MainHeader","SecondaryHeader","h2","ThirdHeader","h3","FormContainer","ImageContainer","StyledField","Field","StyledLabel","InputContainer","InputFieldContainer","ButtonContainer","StyledButton","button","reduxSignUpForm","handleSubmit","signupImg","onSubmit","name","component","reduxForm","form","userLogin","setItem","stringify","reduxLoginForm","notifier","logouthelper","removeItem","console","log","window","location","reload","AuthenticatedComponents","props","user","this","setState","children","Component","MainTaskCardContainer","Card","StyledCheckCircle","CheckCircle","StyledTrash","Trash","StyledUndo","Undo","RenderContainer","Body","StyledDeleteButton","StyledResetButton","RenderButtonContainer","deleteTask","task","getState","_id","afterDeletionTaskList","item","status","setStatus","handleComplete","handleDelete","handleRefresh","style","backgroundColor","onClick","StyledHeader","MainTodoContainer","TaskRenderContainer","taskList","Tasks","addNewTask","userNewTaskList","getTasks","existingUserTaskList","setTask","e","preventDefault","trim","alert","InputGroup","className","FormControl","placeholder","aria-label","aria-describedby","value","autoComplete","onChange","target","Append","Button","variant","map","key","uuid","SciCardMainContainer","DescriptionContainer","StyledImage","HeadlineHeader","AuthorLine","h4","TimeLine","DescLine","SciCard","source","author","url","pubTime","href","alt","StyledLeft","CaretLeft","StyledRight","CaretRight","news","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","articles","article","urlToImage","publishedAt","MainSciNewsContainer","StyledRefresh","RefreshCircle","getNews","get","MainDashboardContainer","MainDashboardHeaderContainer","MainDashboardHeader","MainDashboardHeader2","MainDashboardUpperGrid","UpperGridContainer","MainDashboard","firstName","lastName","userName","email","MainCalendarContainer","SideBarContainer","SideBarHeader","CalendarContainer","StyledInput","input","StyledEventCard","SubmittedEventContainer","calendarEvents","addNewEvent","event","userNewCalendarEvents","getEvents","existingUserCalendarEvents","deleteEvent","updatedDeletedCalendarEvents","updateEvent","patch","updatedCalendarEvents","calendarComponentRef","React","useRef","apiEvents","setApiEvents","currentEvent","setCurrentEvent","submittedEvents","setSubmittedEvents","draggableEl","document","getElementById","Draggable","itemSelector","eventData","eventEl","getAttribute","id","eventId","filter","Provider","color","plugins","timeGridPlugin","dayGridPlugin","interactionPlugin","ref","editable","droppable","selectable","selectMirror","height","locale","initialView","eventClick","clickInfo","confirm","remove","headerToolbar","left","center","right","eventReceive","info","toPlainObject","schedulerLicenseKey","events","eventChange","changeInfo","catch","revert","Meetings","restoreChats","chats","updateStateAfterNewMessage","chat","newChatLog","chatLogs","concat","ChatCard","sender","createdAt","message","MainMessengerContainer","MainHeaderText","NestedMessengerContainer","ChatContainer","Messenger","componentDidUpdate","messageEnd","scrollIntoView","behavior","componentWillUnmount","socket","close","handleSearchChange","chatMessage","renderCards","handleChatSubmit","userId","currentTime","moment","emit","io","on","msg","open","el","MainCardContainer","CardInfoContainer","LinkContainer","StyledLink","StyledTitle","BioNoteCard","ButtonGroup","size","PencilIcon","PencilSquare","NoteCardContainer","bionotes","getBioNotes","userExistingBioNotesCollection","note","bioName","MainEditorContainer","createNewBioNote","submission","userNewBioNotesCollection","EditorState","createEmpty","editorState","setEditorState","setBioName","convertToRaw","getCurrentContent","htmlFor","toolbar","inline","inDropdown","textAlign","image","previewImage","onEditorStateChange","match","params","renderBioNote","currentNote","find","x","jsonCurrentNote","contentState","convertFromRaw","createWithContent","readOnly","updateBioNote","updatedContent","updatedUserBioNoteCollection","bioNoteName","setBioNoteName","deleteBioNote","deletedUserBioNoteCollection","deleteInput","setDeleteInput","SciToolsSecondaryHeader","MainProgramContainer","SubProgramContainer","ProgramLink","StyledCard","SciToolsLanding","bg","text","width","galactPhoto","Text","editProtocolName","newProtocolName","currentProtocolId","laczAssayProtocols","protocolId","renderProp","protocolName","renderCallBack","show","setShow","setNewProtocolName","handleClose","Modal","aria-labelledby","centered","animation","onHide","backdrop","Header","closeButton","Prepend","deleteProtocol","StyledEditButton","StyledSpan","span","StyledCircle","AddCircle","StyledMGlass","MagnifyingGlass","StyledEditIcon","Edit","StyledDeleteIcon","DeleteForever","TimeStampDesc","StyledCardHeader","ProtocolCard","collection","lacZ","timeStamp","renderModal","setRenderModal","renderDeleteModal","setRenderDeleteModal","boolean","renderDeleteCallBack","handleEditProtocolName","handleDeleteProtocol","laczProtocol","addNewProtocols","getProtocols","protocolInput","setProtocolInput","protocol","CardMainContainer","InputDivider","StyledInputHeader","StyledExistingCData","BadgeDivider","TimeInputDivider","SpacerButton","DividerButton","deleteStrainFromCollection","strainId","currentStrainId","addCollectionInputDataToStrain","inputArray","collectionData","pointNum","startTime","collectionValue","setCollectionValue","ownStrain","collectionStrains","strain","handleOnChange","object","number","collectionInputs","targetIndex","findIndex","collectionNum","inputObjectTime","time","odValue","inputObjectOD","hasOwnProperty","Subtitle","length","Badge","Dropdown","drop","Toggle","Menu","count","parseInt","listNum","i","disableClock","format","renderInputGroups","StrainMainContainer","ownProps","ownProtocolId","ownProtocolStrains","StyledMainHeader","strainName","collectionPoints","ChartMainContainer","MainHeaderDivider","StyledMainButtonContainer","ChartHeader","ResContainer","StyledBadge","TravelIcon","ArrowRightSquareFill","addCollectionChartParsedData","newArray","parsedData","ownProtocol","split","j","timeSplit","minuteDifference","toString","k","linearRegressionArray","y","pairArray","Math","log2","Number","timeMinutes","m","linearRegression","regressionLine","linearRegressionLine","rSquaredValue","rSquared","toFixed","results","doublingTime","rSquaredValueCollection","startingOD","aspect","margin","top","bottom","dataKey","stroke","strokeWidth","strokeDasharray","position","textAnchor","angle","verticalAlign","role","MainGridContainer","MainInputContainer","CollectionContainer","ChartContainer","DetailInputContainer","StrainsContainer","StyledReturnIcon","BackspaceFill","TimePickerDivider","StyledLabelEdit","StrainInput","addStrainToCollection","collectionsObject","setStartTime","setCollectionPoints","setStrainName","setStartingOD","Form","Control","as","custom","MainChartContainer","FlexContainer","BadgeContainer","LacZBadge","LacZChart","bgalParsedData","minute","dilutionFactor","volume","bgalConfiguredData","lacZData","od600value","bgalUnit","odValue420","odValue550","linearRegressionValueLacZ","rSquaredValueLacZ","InputHeader","ButtonDivider","InputGroupContainer","InputGroupHeaderContainer","MainChartRenderingContainer","addlacZDataToStrain","lacZArray","ownStrainId","ownStrainName","lacZValue","setLacZValue","lacZInputs","inputObjectOD420","inputObjectOD550","index","LacZMainContainer","ReturnButtonContainer","ArrowIcon","ArrowLeftSquare","AppContainer","DashboardContainer","App","exact","path","SignUpForm","LoginForm","CreateBioNote","Logout","NewBioNote","ReadBioNote","EditBioNote","DeleteBioNote","LazyLacZ","Collection","LacZ","initialState","persistConfig","storage","whitelist","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","formReducer","persistRootReducer","persistReducer","store","createStore","applyMiddleware","reduxThunk","persistor","persistStore","render","loading"],"mappings":"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","file":"static/js/main.fafc4bb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/petriLogoEdit2.c6d1bede.png\";","module.exports = __webpack_public_path__ + \"static/media/signupImg.e0591076.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bgalact.b8f165ff.png\";","export const getJWT = () => {\n    return JSON.parse(localStorage.getItem('jwt'));\n}","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getJWT } from '../../utils/jwthelper';\nimport petriLogoEdit2 from '../../Img/petriLogoEdit2.png';\n\n//Styled-icons:\n\nimport { HomeHeart } from '@styled-icons/boxicons-solid/HomeHeart';\nimport { VideoCamera } from '@styled-icons/entypo/VideoCamera';\nimport { ChatLeftDotsFill } from '@styled-icons/bootstrap/ChatLeftDotsFill';\nimport { Calendar } from '@styled-icons/foundation/Calendar';\nimport { Folder } from '@styled-icons/entypo/Folder';\nimport { Tools } from '@styled-icons/entypo/Tools';\nimport { LogOut } from '@styled-icons/ionicons-sharp/LogOut';\n\n\n//Styling:\n\nconst DefaultNavbar = styled.div`\n    display: flex;\n    justify-content: space-between;\n    background-color: #293241;\n    align-items: center;\n    margin: 0;\n\n`\nconst NavLinks = styled.div`\n    display: flex;\n`\n\nconst DefaultLink = styled(Link)`\n    text-decoration: none !important;\n    margin-left: 40px;\n    margin-right: 40px;\n    color: white;\n    font-family: 'Nunito', sans-serif;\n    font-weight: 300;\n    &::after {\n        display: block;\n        content: '';\n        height: 3px;\n        width: 0;\n        background: transparent;\n        transition: width .5s ease, background-color .5s ease;\n    }\n\n    &:hover::after {\n        width: 100%;\n        background: #ee6c4d;\n    }\n\n    &:hover {\n        color: white !important;\n    }\n`\n\nconst LogoLink = styled(Link)`\n    display: flex;\n    align-items: center;\n    text-decoration: none !important;\n    padding-left: 10px;\n    padding-right: 10px;\n    color: white;\n    font-family: 'Nunito', sans-serif;\n    font-weight: 300;\n    &:hover {\n        color: white !important;\n    }\n`\n\nconst DashboardNavbar = styled.div`\n    height: 100%; \n    width: fit-content; \n    position: fixed; \n    z-index: 1; \n    top: 0; \n    left: 0;\n    background-color: #1c1e37; \n    overflow-x: hidden; \n    padding-top: 20px;\n    text-align: center;\n\n`\n\nconst DashboardLink = styled(Link)`\n    padding: 10px 10px;\n    text-decoration: none !important;\n    font-size: 25px;\n    display: block;\n`\nconst StyledImg = styled.img`\n    max-width: 500px;\n    max-height: 85px;\n    object-fit: cover;\n`\nconst StyledLogoHeader = styled.h1`\n    margin: 0;\n    font-weight: 300;\n    font-size: 50px;\n    font-family: 'IM Fell English SC', serif;\n`\nconst StyledLogoMiniContainer = styled.div`\n    margin: -10px;\n`\nconst StyledMiniLogo = styled.p`\n    margin: 0;\n    font-size: 17px;\n    font-family: 'IM Fell English SC', serif;\n`\nconst StyledHomeHeart = styled(HomeHeart)`\n    margin-bottom: 3px;\n    height: 31px;\n    width: 31px;\n    color: #ffffff;\n    cursor: pointer;\n    ${DashboardLink}:hover & {\n        color: #ADD6FF;\n    }\n`\n\nconst StyledVideoCamera = styled(VideoCamera)`\n    margin-bottom: 3px;\n    height: 30px;\n    width: 27px;\n    color: #ffffff;\n    cursor: pointer;\n    ${DashboardLink}:hover & {\n        color: #ADD6FF;\n    }\n`\n\nconst StyledChatIcon = styled(ChatLeftDotsFill)`\n    margin-bottom: 3px;\n    height: 30px;\n    width: 27px;\n    color: #ffffff;\n    cursor: pointer;\n    ${DashboardLink}:hover & {\n        color: #ADD6FF;\n    }\n`\n\nconst StyledCalendar = styled(Calendar)`\n    margin-bottom: 3px;\n    height: 35px;\n    width: 35px;\n    color: #ffffff;\n    cursor: pointer;\n    ${DashboardLink}:hover & {\n        color: #ADD6FF;\n    }\n`\n\nconst StyledFolder = styled(Folder)`\n    margin-bottom: 3px;\n    height: 30px;\n    width: 30px;\n    color: #ffffff;\n    cursor: pointer;\n    ${DashboardLink}:hover & {\n        color: #ADD6FF;\n    }\n`\n\nconst StyledTools = styled(Tools)`\n    margin-bottom: 3px;\n    height: 30px;\n    width: 30px;\n    color: #ffffff;\n    cursor: pointer;\n    ${DashboardLink}:hover & {\n        color: #ADD6FF;\n    }\n`\nconst StyledLogOut = styled(LogOut)`\n    margin-bottom: 3px;\n    height: 30px;\n    width: 32px;\n    color: #ffffff;\n    cursor: pointer;\n    ${DashboardLink}:hover & {\n        color: #ADD6FF;\n    }\n`\n\nconst StyledDashboardLogo = styled.img`\n    margin-bottom: 3px;\n    height: 65px;\n    width: 65px;\n    color: #ADD6FF;\n    object-fit: cover;\n`\n\nconst StyledLinkLabel = styled.label`\n    display: block;\n    font-family: 'Nunito', sans-serif;\n    font-size: 10px;\n    margin-top: 0px;\n    color: #ffffff;\n    cursor: pointer;\n\n    ${DashboardLink}:hover & {\n        color: #ADD6FF;\n    }\n`\n\n\n\n//Component Structure:\n\nconst Navbar = ({ StateJwt }) => {\n\n    const [JWT, setJWT] = useState(undefined);\n\n    useEffect(() => {\n        const jwt2 = getJWT();\n        setJWT(jwt2);\n    }, [StateJwt]);\n\n\n    const renderNavOnJWT = jwt => {\n\n        if (typeof jwt === 'object' && jwt !== null) {\n            return (\n                <DashboardNavbar>\n                    <StyledDashboardLogo src={petriLogoEdit2} />\n                    <DashboardLink to='/dashboard'>\n                        <StyledHomeHeart />\n                        <StyledLinkLabel>DASHBOARD</StyledLinkLabel>\n                    </DashboardLink>\n                    <DashboardLink to='/meetings'>\n                        <StyledVideoCamera />\n                        <StyledLinkLabel>MEETINGS</StyledLinkLabel>\n                    </DashboardLink>\n                    <DashboardLink to='/messenger'>\n                        <StyledChatIcon />\n                        <StyledLinkLabel>MESSENGER</StyledLinkLabel>\n                    </DashboardLink>\n                    <DashboardLink to='/calendar'>\n                        <StyledCalendar />\n                        <StyledLinkLabel>CALENDAR</StyledLinkLabel>\n                    </DashboardLink>\n                    <DashboardLink to='/createbionote'>\n                        <StyledFolder />\n                        <StyledLinkLabel>BIONOTES</StyledLinkLabel>\n                    </DashboardLink>\n                    <DashboardLink to='/scitools'>\n                        <StyledTools />\n                        <StyledLinkLabel>SCI-TOOLS</StyledLinkLabel>\n                    </DashboardLink>\n                    <DashboardLink to='/logout'>\n                        <StyledLogOut />\n                        <StyledLinkLabel>LOGOUT</StyledLinkLabel>\n                    </DashboardLink>\n                </DashboardNavbar>\n            )\n        } else {\n            return (\n                <DefaultNavbar>\n                    <LogoLink to='/'>\n                        <StyledImg src={petriLogoEdit2}>\n                        </StyledImg>\n                            <StyledLogoHeader>\n                                Petri\n                                <StyledLogoMiniContainer>\n                                    <StyledMiniLogo>research workflow upgraded</StyledMiniLogo>\n                                </StyledLogoMiniContainer>\n                            </StyledLogoHeader>\n                    </LogoLink>\n                    <NavLinks>\n                        <DefaultLink to='/signup'>Sign up</DefaultLink>\n                        <DefaultLink to='/login' >Log In</DefaultLink>\n                    </NavLinks>\n                </DefaultNavbar>\n            )\n        }\n    }\n\n\n    return (\n        <>\n            {renderNavOnJWT(JWT)}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    if (!state.auth.userLogIn) {\n        return {\n            StateJwt: state.auth.userLogIn,\n        }\n    } else {\n        return {\n            StateJwt: state.auth.userLogIn.token,\n        }\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport styled from 'styled-components';\n\n\n//Styles:\n\nconst StyledBackdrop = styled.div`\n    text-align: center;\n    padding: 30px 30px;\n    background-color: #293241;\n`\n\n//Render:\n\nconst Mainbackdrop = () => {\n    return (\n        <StyledBackdrop>\n            <h1>Welcome to Biologger.</h1>\n            <h2>Optimize your Lab workflow here.</h2>\n        </StyledBackdrop>\n    )\n}\n\nexport default Mainbackdrop;","import React from 'react';\nimport styled from 'styled-components';\n\n//Styles:\nconst BlockDetailMain = styled.div`\n    display: grid;\n    grid-template-columns: 50% 50%;\n`\nconst BlockDetail = styled.div`\n    display: inline-block;\n\n`\n\n//Helper Functions:\n\nconst reverseComponent = (title, description, img) => {\n    return (\n        <>\n            <BlockDetail>\n                <h2>This is an Image placeholder</h2>\n            </BlockDetail>\n            <BlockDetail>\n                <h2>{title}</h2>\n                <p>{description}</p>\n            </BlockDetail>\n        </>\n    )\n}\n\n//Render:\nconst BodyBlock = ({Title, Description, Img, Reverse}) => {\n\n    if (Reverse === 'true') {\n        return (\n            <BlockDetailMain>\n                {reverseComponent(Title, Description, Img)}\n            </BlockDetailMain>\n        )\n    }\n\n    return (\n        <BlockDetailMain>\n            <BlockDetail>\n                <h2>{Title}</h2>\n                <p>{Description}</p>\n            </BlockDetail>\n            <BlockDetail>\n                <h2>This is an Image placeholder</h2>\n            </BlockDetail>\n        </BlockDetailMain>\n    )\n}\n\nexport default BodyBlock;","import React from 'react'\nimport styled from 'styled-components';\n\n//Components:\nimport BodyBlock from './BodyBlock';\n\n//Styles:\n\nconst StyledBodyBlock = styled.div`\n    text-align: center;\n    padding: 20px 20px;\n    background-color: lightslategray;\n`\n\n\n//Render:\nconst MainBodyblock = () => {\n    return (\n        <StyledBodyBlock>\n            <h2>Biologger Features!</h2>\n            <BodyBlock\n                Title='Test Title' \n                Description='Test Description'\n                Img='#'\n            />\n            <BodyBlock\n                Title='Test Title2' \n                Description='Test Description2'\n                Img='#'\n                Reverse='true'\n            />\n            <BodyBlock\n                Title='Test Title3' \n                Description='Test Description2'\n                Img='#'\n            />\n            \n        </StyledBodyBlock>\n    )\n}\n\nexport default MainBodyblock;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FooterDiv = styled.div`\n    background-color: lightcoral;\n    text-align: center;\n`\n// const FooterHeader = styled.h2`\n\n// `\n\nconst Footer = () => {\n    return (\n        <FooterDiv>\n            <h2>Test it out! Login or Register!</h2>\n        </FooterDiv>\n    )\n}\n\nexport default Footer;","//Dependencies:\nimport React from 'react';\n\n//Components\nimport MainBackdrop from './MainBackdrop';\nimport MainBodyblock from './MainBodyblock';\nimport Footer from './Footer';\n\nconst MainLandingPage = () => {\n    return (\n        <>\n            <MainBackdrop />\n            <MainBodyblock />\n            <Footer /> \n        </>\n    )\n}\n\nexport default MainLandingPage;","import axios from 'axios';\n\nexport default axios.create({\n    // baseURL: 'http://localhost:8080/api',\n    baseURL: 'https://petri-webapp-heroku.herokuapp.com/api',\n    withCredentials: true,\n});","//Creating history object for navigation:\nimport { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import api from '../../api';\nimport history from '../../historyObject';\nimport { USER_SIGN_UP } from './userSignUpTypes';\n\nconst userSignUp = (formValues) => async dispatch => {\n    //Send redux form values to DB:\n    const response = await api.post('/users/signup', {...formValues});\n\n    //dispatch information recieved from DB to reducers:\n\n    dispatch({\n        type: USER_SIGN_UP,\n        payload: response.data,\n    })\n\n    history.push('/');\n}\n\nexport default userSignUp;","export const USER_SIGN_UP = 'USER_SIGN_UP';","import React from 'react';\nimport styled from 'styled-components';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport userSignUp from '../../redux/userSignUp/userSignUpActions';\nimport signupImg from '../../Img/signupImg.jpg';\n\n//Styles:\n\nconst MainContainer = styled.div`\n    margin: 0 auto;\n    text-align: center;\n    background-color:#F6F9FC;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-top: 20px;\n`\n\nconst ContentContainer = styled.div`\n    display: grid;\n    align-items: center;\n    grid-template-columns: 45% 55%;\n    background-color:#F6F9FC;\n    text-align: center;\n    width: 100%;\n    max-height: 100px;\n\n \n`\nconst HeaderContainer = styled.div`\n    /* background-color: salmon; */\n    padding-left: 12px;\n    padding-right: 12px;\n    padding-top: 20px;\n    padding-bottom: 10px;\n    background-color: #F6F9FC;\n`\n\nexport const MainHeader = styled.h1`\n    margin: 0;\n    font-weight: 900;\n    font-size: 60px;\n    padding-top: 10px;\n    padding-right: 10px;\n    padding-left: 10px;\n    margin-bottom: 30px;\n    color: #293241;\n    font-family: 'Catamaran', sans-serif;\n`\nexport const SecondaryHeader = styled.h2`\n    margin: 0;\n    font-size: 22px;\n    padding: 10px 10px;\n    font-weight: 500;\n    color: #293241;\n    font-family: 'Catamaran', sans-serif;\n`\n\nconst ThirdHeader = styled.h3`\n    margin: 0;\n    font-size: 17px;\n    padding-top: 30px;\n    font-family: 'Catamaran', sans-serif;\n    font-weight: 300;\n    color: #293241;\n`\n\nconst FormContainer = styled.div`\n    flex-grow: 1;\n    text-align: center;\n    /* background-color: lightblue; */\n    padding-left: 80px;\n    padding-right: 80px;\n    background-color: #F6F9FC;\n`\n\nconst ImageContainer = styled.div`\n    flex-grow: 1;\n    /* background-color: navy; */\n    max-width: 100%;\n    max-height: 100%;\n    object-fit: cover;\n    background-color: #F6F9FC;\n`\n\nexport const StyledField = styled(Field)`\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 6px;\n    box-sizing: border-box;\n`\n\nexport const StyledLabel = styled.label`\n    font-family: 'Nunito', sans-serif, Helvetica;\n    font-weight: 300;\n    font-size: 17px;\n`\n\nconst InputContainer = styled.div`\n    padding-top: 50px;\n`\n\nexport const InputFieldContainer = styled.div`\n    padding-top: 10px;\n    padding-bottom: 10px;\n    text-align: left;\n`\n\nconst ButtonContainer = styled.div`\n    padding-top: 15px;\n    padding-bottom: 10px;\n`\n\nexport const StyledButton = styled.button`\n    background-color: #569a59;\n    border: none;\n    color: white;\n    padding: 16px 32px;\n    text-decoration: none;\n    cursor: pointer;\n    border-radius: 10px;\n    width: 100%;\n    font-family: 'Nunito', sans-serif, Helvetica;\n`\n\nconst StyledImg = styled.img`\n    max-width: 100%;\n    max-height: 987px;\n    object-fit: cover;\n    border-radius: 10px;\n\n    @media (min-width: 1700px) {\n        max-height: 1100px;\n    }\n`\n\n\n\n//Render:\nconst SignUpForm = ({ handleSubmit, userSignUp }) => {\n\n    const dispatchFormValues = formValues => {\n        userSignUp(formValues);\n    }\n\n    return (\n        <>\n            <MainContainer>\n                <ContentContainer>\n                    <ImageContainer>\n                        <StyledImg src={signupImg}></StyledImg>\n                    </ImageContainer>\n                    <form onSubmit={handleSubmit(dispatchFormValues)}>\n                        <FormContainer>\n                            <HeaderContainer>\n                                <MainHeader>Join The Colony</MainHeader>\n                                <SecondaryHeader>Create an account to increase your research workflow by writing bio-note snippets, setting task reminders, and organizing work schedule.</SecondaryHeader>\n                                <ThirdHeader>Already signed up? Login above!</ThirdHeader>\n                            </HeaderContainer>\n                                <InputContainer>\n                                    <InputFieldContainer>\n                                        <StyledLabel>First Name</StyledLabel>\n                                        <StyledField name='firstName' component='input'></StyledField>\n                                    </InputFieldContainer>\n                                    <InputFieldContainer>\n                                        <StyledLabel>Last Name</StyledLabel>\n                                        <StyledField name='lastName' component='input'></StyledField>\n                                    </InputFieldContainer>\n                                    <InputFieldContainer>\n                                        <StyledLabel>Username</StyledLabel>\n                                        <StyledField name='userName' component='input'></StyledField>\n                                    </InputFieldContainer>\n                                    <InputFieldContainer>\n                                        <StyledLabel>Email Address</StyledLabel>\n                                        <StyledField name='email' component='input'></StyledField>\n                                    </InputFieldContainer>\n                                    <InputFieldContainer>\n                                        <StyledLabel>Password</StyledLabel>\n                                        <StyledField name='password' component='input' type='password'></StyledField>\n                                    </InputFieldContainer>\n                                    <InputFieldContainer>\n                                        <StyledLabel>Confirm Password</StyledLabel>\n                                        <StyledField name='passwordConfirm' component='input' type='password'></StyledField>\n                                    </InputFieldContainer>\n                                </InputContainer>\n                            <ButtonContainer>\n                                <StyledButton type='submit'>Sign Up</StyledButton>\n                            </ButtonContainer>\n                        </FormContainer>\n                    </form>\n                </ContentContainer>\n            </MainContainer>\n        </>\n    )\n}\n\n//Connection to Redux, Redux-form:\n\nconst reduxSignUpForm = connect(null, { userSignUp })(SignUpForm);\n\nexport default reduxForm({\n    form: 'SignUpForm'\n})(reduxSignUpForm);","import { USER_LOG_IN } from '../userLogin/userLoginTypes';\nimport history from '../../historyObject';\nimport api from '../../api';\n\nconst userLogin = formValues => async dispatch => {\n    //Send a POST request to api:\n    const response = await api.post('/users/login', {...formValues});\n\n    //Store JWT in response into localstorage:\n    localStorage.setItem('jwt', JSON.stringify(response.data));\n\n    //Dispatch response object to reducers:\n    dispatch({\n        type: USER_LOG_IN,\n        payload: response.data,\n    })\n\n    history.push('/dashboard');\n\n}\n\nexport default userLogin;","export const USER_LOG_IN = 'USER_LOG_IN';","import React from 'react';\nimport styled from 'styled-components';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport userLogin from '../../redux/userLogin/userLoginActions';\n\n//Styles:\nimport {\n    MainHeader,\n    SecondaryHeader,\n    StyledField,\n    StyledLabel,\n    StyledButton,\n    InputFieldContainer,\n} from '../signupPage/SignUpForm';\n\nconst MainContainer = styled.div`\n    text-align: center;\n    padding: 10px 10px;\n    background-color:#F6F9FC;\n    position: absolute;\n    float: left;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n`\n\n\n//Render:\nconst LoginForm = ({ handleSubmit, userLogin, notifier }) => {\n\n    const dispatchFormValues = formValues => {\n        userLogin(formValues, notifier);\n    }\n\n\n    return (\n        <>\n            <MainContainer>\n                <MainHeader>Welcome Back!</MainHeader>\n                <SecondaryHeader>Please log in to continue...</SecondaryHeader>\n                <div>\n                    <form onSubmit={handleSubmit(dispatchFormValues)}>\n                        <InputFieldContainer>\n                            <StyledLabel>Email Address</StyledLabel>\n                            <StyledField name='email' component='input'></StyledField>\n                        </InputFieldContainer>\n                        <InputFieldContainer>\n                            <StyledLabel>Password</StyledLabel>\n                            <StyledField name='password' component='input' type='password'></StyledField>\n                        </InputFieldContainer>\n                        <InputFieldContainer>\n                            <StyledButton type='submit'>Login</StyledButton>\n                        </InputFieldContainer>\n                    </form>\n                </div>\n            </MainContainer>\n        </>\n    )\n}\n\n//Connections:\n\nconst reduxLoginForm = connect(null, { userLogin })(LoginForm);\n\nexport default reduxForm({\n    form: 'loginForm'\n})(reduxLoginForm);","import history from '../historyObject';\n\nexport const logouthelper = () => {\n    //Remove JWT.\n    localStorage.removeItem('jwt');\n    console.log('User has logged out successfully');\n    window.location.reload(true);\n\n}","import React from 'react';\nimport { logouthelper } from '../utils/logouthelper';\n\nconst Logout = () => {\n    return logouthelper();\n}\n\nexport default logouthelper;","import React, { Component } from 'react';\nimport { getJWT } from '../../utils/jwthelper';\nimport history from '../../historyObject';\n// import api from '../../api';\n\nclass AuthenticatedComponents extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: undefined,\n        }\n    }\n\n    componentDidMount() {\n        const jwt = getJWT();\n\n        if(!jwt) {\n            history.push('/login');\n        }\n        //Implement route in server for using JWT to get user, store something temporarily for now:\n        this.setState({\n            user: 'temp'\n        });\n\n    }\n\n\n    render() {\n\n        if (this.state.user === undefined) {\n            return (\n                <div><h1>The route you are accessing is protected. Please log in.</h1></div>\n            );\n        }\n\n        return (\n            <>\n                {this.props.children}\n            </>\n        )\n    }\n}\n\nexport default AuthenticatedComponents;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { deleteTask } from '../../../redux/userTaskLog/userTaskLogActions';\nimport Card from 'react-bootstrap/Card'\n\n//Icons:\nimport { CheckCircle } from '@styled-icons/boxicons-regular/CheckCircle';\nimport { Trash } from '@styled-icons/entypo/Trash';\nimport { Undo } from '@styled-icons/boxicons-regular/Undo';\n\nconst MainTaskCardContainer = styled(Card)`\n    display: grid;\n    margin-top: 5px;\n    margin-bottom: 5px;\n    padding: 0;\n    grid-template-columns: 80% 20%;\n\n`\n\nconst StyledCheckCircle = styled(CheckCircle)`\n    color: seagreen;\n    height: 25px;\n    width: 25px;\n`\nconst StyledTrash = styled(Trash)`\n    color: whitesmoke;\n    height: 22px; \n    width: 22px;\n`\n\nconst StyledUndo = styled(Undo)`\n    color: #545879;\n    height: 25px; \n    width: 25px;\n`\n\nconst StyledButton = styled.button`\n    cursor: pointer;\n    border: none;\n    border-top-left-radius: none;\n    border-bottom-left-radius: none;\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    height: 34px;\n    background-color: #242746;\n    outline: none;\n    &:focus {\n        outline: none;\n    }\n`\nconst RenderContainer = styled(Card.Body)`\n    display: flex;\n    padding: 5px 5px;\n    justify-content: space-between;\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n    color: white;\n`\nconst StyledDeleteButton = styled(StyledButton)`\n    border-radius: 0;\n    flex-grow: 1;\n    background-color:#242746;\n`\nconst StyledResetButton = styled(StyledButton)`\n    flex-grow: 1;\n    background-color: #242746;\n`\n\nconst RenderButtonContainer = styled.div`\n    display: flex;\n`\n\n//Render:\n\nconst TaskCard = ({ item, deleteTask }) => {\n\n    const [ status, setStatus ] = useState('incomplete');\n\n    const handleComplete = () => {\n        setStatus('complete');\n    }\n\n    const handleDelete = () => {\n        //item refers to own item\n        deleteTask(item);\n    }\n\n    const handleRefresh = () => {\n        setStatus('incomplete');\n    }\n\n    const renderButton = () => {\n        if (status === 'incomplete') {\n            return (\n                <StyledButton onClick={handleComplete}>\n                    <StyledCheckCircle />\n                </StyledButton>\n            )\n        } else if (status === 'complete') {\n            return (\n                <>\n                    <RenderButtonContainer>\n                        <StyledDeleteButton onClick={handleDelete}>\n                            <StyledTrash />\n                        </StyledDeleteButton>\n                        <StyledResetButton onClick={handleRefresh}>\n                            <StyledUndo />\n                        </StyledResetButton>\n                    </RenderButtonContainer>\n                </>\n            )\n        }\n    }\n\n    const renderColor = () => {\n        if (status === 'incomplete') {\n            return '#943943';\n        } else if (status === 'complete') {\n            return 'seagreen';\n        }\n    }\n\n    return (\n        <>\n            <MainTaskCardContainer>\n                <RenderContainer style={{ backgroundColor: `${renderColor()}`}}>\n                    {item}\n                </RenderContainer>\n                {renderButton()}\n            </MainTaskCardContainer>\n        </>\n    )\n}\n\nexport default connect(null, { deleteTask })(TaskCard);\n\n/* log:11/7 \n\nSo now you have a responsive (and quite shitty) button. However, the style can always be improved after. What you need to do now is to:\n1. create a deleteTask action creator that will send a POST request with your user ID to mongo\n2. Create a deleteTask route in mongo, find the USER document, and delete the task with the same name, and save it. Response should be the updated taskList with the task deleted.\n3. Dispatch the updated TaskList with response deleted. Create a case in the reducer and (remember, another action TYPE) to save and change the state.\n\n*/","import api from '../../api';\nimport { USER_NEW_TASK, USER_GET_TASKS, USER_DELETED_TASK } from './userTaskLogTypes';\n\nexport function getTasks() {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } }} } = getState();\n        const response = await api.post('/users/getTasks', { _id });\n\n        dispatch({\n            type: USER_GET_TASKS,\n            payload: response.data.existingUserTaskList,\n        })\n    }\n}\n\nexport function addNewTask(data) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post(`/users/task`, {data, _id});\n\n        dispatch({\n            type: USER_NEW_TASK,\n            payload: response.data.userNewTaskList,\n        });\n    }\n}\n\nexport function deleteTask(task) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id }}}} = getState();\n\n        const response = await api.post(`/users/task/delete`, {task, _id});\n\n        dispatch({\n            type: USER_DELETED_TASK,\n            payload: response.data.afterDeletionTaskList,\n        });\n    }\n}\n","export const USER_NEW_TASK = 'USER_NEW_TASK';\nexport const USER_GET_TASKS = 'USER_GET_TASKS';\nexport const USER_DELETED_TASK = 'USER_DELETED_TASK';","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addNewTask, getTasks } from '../../../redux/userTaskLog/userTaskLogActions';\nimport TaskCard from './TaskCard';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\n\n//Styles:\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\n\nexport const StyledHeader = styled.h2`\n    font-family: 'Nunito', sans-serif;\n    font-size: 25px;\n    margin: 0;\n    background-color:#242746;\n    color: white;\n    padding: 10px 10px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    -webkit-box-shadow: 0 -2px 5px rgba(0,0,0,0.3);\n    -moz-box-shadow: 0 -2px 5px rgba(0,0,0,0.3);\n    box-shadow: 0 -2px 5px rgba(0,0,0,0.3);\n\n`\n\nexport const MainTodoContainer = styled.div`\n    padding: 20px 20px;\n    background-color: white;\n    border: none;\n    height: 400px;\n    width: 100%;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    -webkit-box-shadow: 0 3px 5px rgba(0,0,0,0.3);\n    -moz-box-shadow: 0 3px 5px rgba(0,0,0,0.3);\n    box-shadow: 0 3px 5px rgba(0,0,0,0.3);\n`\n\nconst TaskRenderContainer = styled.div`\n    height: 290px;\n    overflow-y: scroll;\n`\n\n\n//Render:\nconst MDTodo = ({ addNewTask, getTasks, taskList }) => {\n\n    const [task, setTask] = useState('');\n\n    useEffect(() => {\n        getTasks();\n    },[])\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if(task.trim() === '') {\n            alert('Please enter a value');\n        } else {\n            addNewTask(task);\n            setTask('');\n        }\n    }\n\n    const handleChange = e => {\n        e.preventDefault();\n        setTask(e.target.value);\n    }\n\n    const renderTasks = () => (\n        taskList.map(task => (\n            <TaskCard key={uuid()} item={task} />\n        ))\n    )\n\n    return (\n        <>\n            <StyledHeader>Daily Task Log</StyledHeader>\n            <MainTodoContainer>\n                <div>\n                    <form onSubmit={handleSubmit}>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl\n                                placeholder=\"Add new task\"\n                                aria-label=\"Add new task\"\n                                aria-describedby=\"basic-addon2\"\n                                type=\"text\"\n                                value={task}\n                                autoComplete='off'\n                                onChange={handleChange}\n                            />\n                            <InputGroup.Append>\n                                <Button variant=\"primary\" type='submit'>Add</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </form>\n                </div>\n                <TaskRenderContainer>\n                    {renderTasks()}\n                </TaskRenderContainer>\n            </MainTodoContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        taskList: state.task.Tasks,\n    }\n}\n\nexport default connect(mapStateToProps, { addNewTask, getTasks })(MDTodo);","import React from 'react';\nimport styled from 'styled-components';\n\n//Styles:\n\nimport {Button} from 'react-bootstrap';\n\nconst SciCardMainContainer = styled.div`\n    display: grid;\n    background-color: white;\n    padding: 4px 4px;\n    grid-template-columns: 40% 60%;\n`\n\nconst DescriptionContainer = styled.div`\n    background-color: \n    padding-left: 10px;\n    padding-right: 10px;\n`\n\nconst StyledImage = styled.img`\n    display: block;\n    margin: auto;\n    max-width: 100%;\n    max-height: 300px;\n    object-fit: cover;\n    border-radius: 8px;\n    text-align: center;\n`\n\nconst HeadlineHeader = styled.h2`\n    font-family: 'Nunito', sans-serif;\n    font-size: 20px;\n    text-align: center;\n    font-weight: 600;\n`\n\nconst AuthorLine = styled.h4`\n    font-family: 'Nunito', sans-serif;\n    font-size: 15px;\n    text-align: center;\n    font-weight: 200;\n`\n\nconst TimeLine = styled.p`\n    font-family: 'Nunito', sans-serif;\n    font-size: 12px;\n    text-align: center;\n    font-weight: 200;\n`\nconst DescLine = styled.p`\n    font-family: 'Nunito', sans-serif;\n    font-size: 13px;\n    text-align: justify;\n    font-weight: 500;\n`\n\n\n//Render:\n\nconst SciCard = ({\n    source,\n    author,\n    title,\n    description,\n    url,\n    img,\n    pubTime\n}) => {\n\n    const renderAuthor = () => {\n        if (author) {\n            return <AuthorLine>By: {author}</AuthorLine>\n        } else {\n            return null;\n        }\n    }\n\n    const renderImg = () => {\n        if (img) {\n            return <StyledImage src={img} alt='Img'></StyledImage>\n        } else {\n            return <div>We're Sorry. There's no image supplied for this article.</div>\n        }\n    }\n\n    return (\n        <>\n            <SciCardMainContainer>\n                <DescriptionContainer>\n                    <HeadlineHeader>{title}</HeadlineHeader>\n                    {renderAuthor()}\n                    <TimeLine>Published On: {pubTime}</TimeLine>\n                    <DescLine>{description}</DescLine>\n                    <div>\n                        <a href={url}>\n                            <Button variant='primary'>Read Full Article</Button>\n                        </a>\n                    </div>\n                </DescriptionContainer>\n                <div>\n                    <div>\n                        <StyledImage src={img} alt='Img'></StyledImage>\n                    </div>\n                </div>\n            </SciCardMainContainer>\n        </>\n    )\n}\n\nexport default SciCard;","import React from 'react';\nimport Slider from 'react-slick';\nimport { connect } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\n\n//Components:\nimport SciCard from './SciCard';\nimport { CaretLeft } from '@styled-icons/boxicons-regular/CaretLeft';\nimport { CaretRight } from '@styled-icons/boxicons-regular/CaretRight';\n\nconst StyledLeft = styled(CaretLeft)`\n    height: 50px;\n    width: 50px;\n    color: red;\n    &:hover {\n        color: red;\n    }\n`\nconst StyledRight = styled(CaretRight)`\n    height: 35px;\n    width: 35px;\n    color: red;\n    &:hover {\n        color: red;\n    }\n`\n\n\nconst SciCarousel = ({ news }) => {\n    const settings = {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        nextArrow: <StyledRight />,\n        prevArrow: <StyledLeft />,\n    }\n\n    const renderNews = () => (\n        news.news.data.articles.map(article => (\n            <SciCard\n                key={uuid()}\n                source={article.source.name}\n                author={article.author}\n                title={article.title}\n                description={article.description}\n                url={article.url}\n                img={article.urlToImage}\n                pubTime={article.publishedAt}\n            />\n        ))\n    )\n\n    return (\n        <>\n            <Slider {...settings}>\n                {renderNews()}\n            </Slider>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        news: state.news,\n    }\n}\n\nexport default connect(mapStateToProps)(SciCarousel);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getNews } from '../../../redux/sciNews/sciNewsActions';\nimport { AiOutlineReload } from 'react-icons/ai';\nimport styled from 'styled-components';\nimport SciCarousel from './SciCarousel';\n\n//Styles:\nimport { StyledHeader } from './MDTodo';\nimport { MainTodoContainer } from './MDTodo';\nimport { RefreshCircle } from '@styled-icons/ionicons-sharp/RefreshCircle';\n\nconst MainSciNewsContainer = styled(MainTodoContainer)`\n    padding-top: 30px;\n    background-color: white;\n    height: 400px;\n`\n\nconst StyledRefresh = styled(RefreshCircle)`\n    height: 25px;\n    width: 25px;\n    color: white;\n    margin-bottom: 2px;\n\n`\n\nconst StyledButton = styled.button`\n    float: right;\n    border: none;\n    border-radius: 4px;\n    background-color: #036bdc;\n    cursor: pointer;\n`\n\n\n//Components:\n\n//Render:\n\nconst MDSciNews = ({ getNews, news }) => {\n\n    const handleGetRequest = e => {\n        e.preventDefault();\n        getNews();\n    }\n\n    return (\n        <>\n            <div>\n                <StyledHeader>Sci-News Top Headlines\n                    <StyledButton onClick={handleGetRequest}>\n                        <StyledRefresh />\n                    </StyledButton>\n                </StyledHeader>\n            </div>\n            <MainSciNewsContainer>\n                <div>\n                    <SciCarousel />\n                </div>\n            </MainSciNewsContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        news: state.news,\n    }\n}\n\nexport default connect(mapStateToProps, { getNews })(MDSciNews);","import axios from 'axios';\nimport { USER_GET_NEWS } from './sciNewsTypes';\n\nexport function getNews() {\n    return async dispatch => {\n\n        const response = await axios.get('https://newsapi.org/v2/top-headlines?category=science&country=us&apiKey=3c9c2e2fa85142fb957890523a2bc4fc');\n\n        dispatch({\n            type: USER_GET_NEWS,\n            payload: response,\n        })\n    }\n}","export const USER_GET_NEWS = 'USER_GET_NEWS';","import React, { Component } from 'react';\nimport { getJWT } from '../../../utils/jwthelper';\nimport styled from 'styled-components';\n\n//Main Dashboard Components:\nimport MDTodo from './MDTodo';\nimport MDSciNews from './MDSciNews';\n\n//Styles:\nconst MainDashboardContainer = styled.div`\n    height: 100vh;\n    background-color: ##F6F9FC;\n`\nconst MainDashboardHeaderContainer = styled.div`\n    padding-top: 20px;\n    text-align: center;\n    background-color: ##F6F9FC;\n`\nconst MainDashboardHeader = styled.h1`\n    font-family: 'Nunito', sans-serif;\n    margin: 0;\n`\nconst MainDashboardHeader2 = styled.h2`\n    font-family: 'Nunito', sans-serif;\n    padding-top: 10px;\n    margin: 0;\n`\n\nconst MainDashboardUpperGrid = styled.div`\n    background-color: ##F6F9FC;\n    padding: 20px 20px;\n    display: grid;\n    grid-template-columns: 35% 65%;\n`\n\nconst UpperGridContainer = styled.div`\n    text-align: center;\n    padding: 20px 40px;\n`\n\nclass MainDashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const userDetails = getJWT();\n\n        const { firstName, lastName, userName, email } = userDetails.data;\n\n        this.setState({\n            firstName,\n            lastName,\n            userName,\n            email,\n        });\n\n        console.log(getJWT());\n    }\n\n\n    render() {\n\n        const { firstName, email } = this.state;\n\n        return (\n            <MainDashboardContainer>\n                <MainDashboardHeaderContainer>\n                    <MainDashboardHeader>Welcome back {firstName}! </MainDashboardHeader>\n                    <MainDashboardHeader2>You are currently signed in under {email}</MainDashboardHeader2>\n                </MainDashboardHeaderContainer>\n                <MainDashboardUpperGrid>\n                    <UpperGridContainer>\n                        <MDTodo />\n                    </UpperGridContainer>\n                    <UpperGridContainer>\n                        <MDSciNews />\n                    </UpperGridContainer>\n                </MainDashboardUpperGrid>\n            </MainDashboardContainer>\n        )\n    }\n}\n\nexport default MainDashboard;","import React, { useState,useEffect, useRef } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable } from '@fullcalendar/interaction';\nimport styled from 'styled-components';\nimport { v4 as uuid } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addNewEvent, getEvents, deleteEvent, updateEvent } from '../../../redux/userCalendar/calendarActions';\nimport { MdCancel } from 'react-icons/md';\nimport { IconContext } from 'react-icons';\n\n//Styles:\nconst MainCalendarContainer = styled.div`\n    display: flex;\n    padding: 20px 20px;\n`\nconst SideBarContainer = styled.div`\n    flex-grow: .2;\n    text-align: center;\n    margin: 0;\n    padding: 0;\n    background-color: rgba(44,62,80, 0.8);\n    margin-right: 20px;\n    border-radius: 8px;\n    max-height: 800px;\n`\n\nconst SideBarHeader = styled.h2`\n    color: white;\n    font-family: 'Nunito', sans-serif;\n`\n\nconst CalendarContainer = styled.div`\n    flex-grow: 3;\n`\n\nconst StyledInput = styled.input`\n    height: 25px;\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: 10px;\n    padding-left: 10px;\n    padding-right: 10px;\n    border: 1px solid white;\n    &:focus {\n        outline:none;\n    }\n\n`\nconst StyledButton = styled.button`\n    height: 29px;\n    background-color: rgb(30, 43, 55);\n    color: white;\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n    border: 1px solid rgb(30, 43, 55);\n    cursor: pointer;\n    &:focus {\n        outline:none;\n    }\n`\n\nconst StyledEventCard = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    cursor: pointer;\n    background-color: rgb(55, 136, 216);\n    border: 1px solid rgb(55, 136, 216);\n    color: white;\n    text-align: center;\n    border-radius: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n`\n\nconst SubmittedEventContainer = styled.div`\n    padding-left: 15px;\n    padding-right: 15px;\n`\n\n\n\n\n//Render:\n\nconst Calendar = ({ addNewEvent, getEvents, calendarEvents, deleteEvent, updateEvent }) => {\n\n    const calendarComponentRef = React.useRef();\n\n    const [ apiEvents, setApiEvents ] = useState([])\n    const [ currentEvent, setCurrentEvent ] = useState('');\n    const [ submittedEvents, setSubmittedEvents ] = useState([]);\n\n    useEffect(() => {\n\n        getEvents();\n\n        setApiEvents(calendarEvents.calendarEvents);\n\n\n        let draggableEl = document.getElementById(\"external-events\");\n\n        new Draggable(draggableEl, {\n            itemSelector: \".fc-event\",\n            eventData: function(eventEl) {\n                let title = eventEl.getAttribute(\"title\");\n                let id = eventEl.getAttribute(\"id\");\n                return {\n                    title,\n                    id\n                };\n            }\n        });\n\n    },[])\n\n    const handleFormChange = e => {\n        setCurrentEvent(e.target.value);\n    }\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        setSubmittedEvents([...submittedEvents, {\n            title: currentEvent,\n            id: uuid(),\n        }]);\n        setCurrentEvent('')\n        console.log(submittedEvents);\n    }\n\n    const handleEventClick = clickInfo => {\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}' ?`)) {\n            deleteEvent(clickInfo.event);\n            clickInfo.event.remove();\n        }\n    }\n\n    const handleEventCardDelete = eventId => {\n        setSubmittedEvents(submittedEvents.filter(event => (event.id !== eventId)));\n    }\n\n    const handleEventReceive = info => {\n        //Only submit the event object to action creator:\n        addNewEvent(info.event.toPlainObject());\n    }\n\n    const handleEventChange = changeInfo => {\n        updateEvent(changeInfo.event.toPlainObject())\n            .catch(() => {\n                console.log('Something Wonky Happened! Change not reported to API');\n                changeInfo.revert()\n            })\n    }\n\n\n    const renderSideBar = () => {\n        return (\n            <SubmittedEventContainer id='external-events'>\n                {submittedEvents.map(event => {\n                    return (\n                        <StyledEventCard\n                            className=\"fc-event\"\n                            title={event.title}\n                            id={event.id}\n                            key={event.id}\n                        >\n                            {event.title}\n                            <button onClick={() => handleEventCardDelete(event.id)}>\n                            <IconContext.Provider value={{ color: \"red\", className: \"global-class-name\" }}>\n                                <div>\n                                    <MdCancel />\n                                </div>\n                            </IconContext.Provider>\n                            </button>\n                        </StyledEventCard>\n                    );\n                })}\n            </SubmittedEventContainer>\n        )\n    }\n\n\n    return (\n        <>\n            <MainCalendarContainer>\n                <SideBarContainer>\n                    <form onSubmit={handleFormSubmit}>\n                        <SideBarHeader>Add New Events</SideBarHeader>\n                        <StyledInput type='text' onChange={handleFormChange} value={currentEvent}></StyledInput>\n                        <StyledButton type='submit'>Submit</StyledButton>\n                    </form>\n                    <hr />\n                    {renderSideBar()}\n                </SideBarContainer>\n                <CalendarContainer>\n                    <FullCalendar\n                        plugins={[ timeGridPlugin, dayGridPlugin, interactionPlugin ]}\n                        ref={calendarComponentRef}\n                        editable={true}\n                        droppable={true}\n                        selectable={true}\n                        selectMirror={true}\n                        height='800px'\n                        locale='us'\n                        initialView='dayGridMonth'\n                        eventClick={handleEventClick}\n                        headerToolbar={{\n                            left:'prev,next,today',\n                            center:'title',\n                            right:'dayGridMonth,timeGridWeek,timeGridDay'\n                        }}\n                        eventReceive={handleEventReceive}\n                        schedulerLicenseKey='GPL-My-Project-Is-Open-Source'\n                        events={apiEvents}\n                        eventChange={handleEventChange}\n                    />\n                </CalendarContainer>\n            </MainCalendarContainer>\n        </>\n    )\n}\n\n\n/*\nDocumentation:\nhttps://fullcalendar.io/docs#toc\n\n\nIt seems like the events object can easily be saved to mongoDB for persistence... --> Using this strategy we can implement personal calendar..https://fullcalendar.io/docs/event-object\n\nWe have now made persistence when adding new events to the calendar, and grabbing from our DB. However, persistence of moving events or changing duration of events is not supported yet. We have to implement USER_UPDATE_EVENT for that to happen.\n\n**BUGS**\n1. Adding Events will duplicate events--> Refresh will remove.\n\n2. Deleting Events from Calendar will remove all events --> Refresh will update. \n*/\n\nconst mapStateToProps = state => {\n    return {\n        calendarEvents: state.calendarEvents\n    }\n}\n\n\n\nexport default connect(mapStateToProps, { addNewEvent, getEvents, deleteEvent, updateEvent })(Calendar);\n","import api from '../../api';\nimport {\n    USER_ADD_EVENT,\n    USER_GET_EVENTS,\n    USER_UPDATE_EVENT,\n    USER_DELETE_EVENT,\n} from './calendarTypes';\n\nexport function addNewEvent(event) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post('/users/calendar/new', { _id, event });\n\n        dispatch({\n            type: USER_ADD_EVENT,\n            payload: response.data.userNewCalendarEvents,\n        });\n    }\n}\n\nexport function getEvents() {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post('/users/calendar/events', { _id });\n\n        dispatch({\n            type: USER_GET_EVENTS,\n            payload: response.data.existingUserCalendarEvents\n        });\n    }\n}\n\nexport function deleteEvent(event) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post('/users/calendar/delete', { event, _id });\n\n        console.log(response);\n\n        dispatch({\n            type: USER_DELETE_EVENT,\n            payload: response.data.updatedDeletedCalendarEvents\n        });\n    }\n}\n\nexport function updateEvent(event) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.patch('/users/calendar/update', { event, _id });\n\n        dispatch({\n            type: USER_UPDATE_EVENT,\n            payload: response.data.updatedCalendarEvents\n        });\n    }\n}","export const USER_ADD_EVENT = 'USER_ADD_EVENT';\nexport const USER_UPDATE_EVENT = 'USER_UPDATE_EVENT';\nexport const USER_DELETE_EVENT = 'USER_DELETE_EVENT';\nexport const USER_GET_EVENTS = 'USER_GET_EVENTS';","import React from 'react'\n\nconst Meetings = () => {\n    return (\n        <div>\n            This should be the presentation/meetings page;\n        </div>\n    )\n}\n\nexport default Meetings;\n","import api from '../../api';\nimport { USER_CHAT_REQUEST, USER_CHAT_RECEIVED } from './chatTypes';\n\nexport function restoreChats() {\n    return async dispatch => {\n\n        const response = await api.get(`/users/chats`);\n\n        if (response) {\n            dispatch({\n                type: USER_CHAT_REQUEST,\n                payload: response.data.data.chats\n            });\n        } else {\n            return null;\n        }\n    }\n}\n\n\nexport function updateStateAfterNewMessage(data) {\n    return (dispatch, getState) => {\n        const { chat } = getState();\n\n        let newChatLog = [...chat.chatLogs];\n\n        newChatLog = newChatLog.concat(data);\n\n        dispatch({\n            type: USER_CHAT_RECEIVED,\n            payload: newChatLog,\n        });\n    }\n}","export const USER_CHAT_REQUEST = 'USER_CHAT_REQUEST';\nexport const USER_CHAT_RECEIVED = 'USER_CHAT_RECIEVED';","import React from 'react'\n\nconst ChatCard = (props) => {\n    return (\n        <div>\n            <div>\n                <h2>{props.sender.userName}</h2>\n                <h3>{props.sender.createdAt}</h3>\n            </div>\n            <div>{props.message}</div>\n        </div>\n    )\n}\n\nexport default ChatCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport io from 'socket.io-client';\nimport { restoreChats, updateStateAfterNewMessage } from '../../../redux/chatMessaging/chatActions';\nimport ChatCard from './ChatCard.js';\nimport styled from 'styled-components';\nimport { v4 as uuid } from 'uuid';\n\nimport 'normalize.css';\n\n//Styles:\n\nconst MainMessengerContainer = styled.div`\n    margin-left: 0;\n    box-sizing: border-box;\n    background-color: #f6f9fc;\n    height: 100vh;\n\n`\nconst MainHeaderText = styled.h1`\n    margin: 0;\n    padding: 10px 10px;\n    text-align: center;\n    font-family: Roboto, sans-serif;\n    color: #747fe0;\n\n`\nconst NestedMessengerContainer = styled.div`\n    margin-left: 20px;\n    margin-right: 20px;\n    background-color: #e5f1fc;\n    box-shadow: 0 1px 2px rgba(0, 0, 0,0.07), 0 1px 1px rgba(0,0,0.07);\n`\n\nconst ChatContainer = styled.div`\n    margin-left: 20px;\n    height: 600px;\n    background-color: #e5f1fc;\n    overflow-y: scroll;\n`\n\nconst InputContainer = styled.div`\n    padding: 40px 40px;\n    background-color: #e5f1fc;\n    text-align: center;\n`\nconst StyledInput = styled.input`\n    width: 600px;\n    margin-left: 10px;\n    margin-right: 10px;\n    padding: 10px 10px;\n    border-radius: 5px;\n    border: 1px solid white;\n    box-shadow:0 0 15px 4px rgba(0,0,0,0.06);\n    &:focus {\n        outline: none;\n    }\n`\n\nconst StyledButton = styled.button`\n    cursor: pointer;\n    height: 38px;\n    margin-left: 10px;\n    margin-right: 10px;\n    border: none;\n    border-radius: 5px;\n    background-color: #35bdb2;\n    color: white;\n    box-shadow:0 0 15px 4px rgba(0,0,0,0.06);\n    &:focus {\n        outline: none;\n    }\n`\n\n\n//Render:\n\nclass Messenger extends Component {\n    constructor(props) {\n        super(props)\n        console.log('constructor running');\n\n        this.props.restoreChats();\n\n        this.state = {\n            chatMessage: \"\",\n        }\n    }\n\n    componentDidMount() {\n        let server = 'http://localhost:8080';\n        console.log('Component mounted');\n\n        //Gather all stored chat messages:\n\n        //Connecting Socket to Server:\n        this.socket = io(server);\n        this.socket.on('Output Chat Message', msg => {\n            //We need to create another action creator to dispatch an 'updated state' when receiving new messages from backend:\n            console.log('Socket Created');\n            console.log(msg);\n            this.props.updateStateAfterNewMessage(msg);\n        })\n\n        this.socket.open();\n    }\n\n    componentDidUpdate = () => {\n        this.messageEnd.scrollIntoView({behavior: 'smooth'});\n    }\n\n    componentWillUnmount = () => {\n        //Prevent multiple sockets from opening per re-render\n        this.socket.close();\n    }\n\n    handleSearchChange = e => {\n        this.setState({\n            chatMessage: e.target.value\n        })\n    }\n\n    renderCards = () => (\n        //Changing key from chat._id to uuid to prevent occasional duplication:\n        this.props.chat.map((chat) => (\n            <ChatCard key={uuid()} {...chat}/>\n        ))\n    )\n    \n\n    handleChatSubmit = e => {\n        e.preventDefault();\n\n        //We need to put chat message into server:\n        let chatMessage = this.state.chatMessage;\n\n        let userId = this.props.user._id;\n        let userName = this.props.user.userName;\n        let currentTime = moment();\n        let type = 'Text';\n\n        this.socket.emit(\"Input Chat Message\", {\n            chatMessage,\n            userId,\n            userName,\n            currentTime,\n            type,\n        });\n\n        //Reset State:\n\n        this.setState({\n            chatMessage: ''\n        });\n    }\n\n    render() {\n        return(\n            <>\n                <MainMessengerContainer>\n                    <MainHeaderText>Global Chat</MainHeaderText>\n                    <NestedMessengerContainer>\n                        <div>\n                            <ChatContainer>\n                                {this.props.chat && (\n                                    <div>{this.renderCards()}</div>\n                                )}\n                                <div\n                                    ref={el => {this.messageEnd = el;}}\n                                />\n                            </ChatContainer>\n                        </div>\n                        <InputContainer>\n                            <form onSubmit={this.handleChatSubmit} autoComplete='off'>\n                                <StyledInput\n                                    id='message'\n                                    placeholder='Start Chatting!'\n                                    type='text'\n                                    value={this.state.chatMessage}\n                                    onChange={this.handleSearchChange}\n                                />\n                                <StyledButton type='submit'>Submit</StyledButton>\n                            </form>\n                        </InputContainer>\n                    </NestedMessengerContainer>\n                </MainMessengerContainer>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.userLogIn.data,\n        chat: state.chat.chatLogs,\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        restoreChats,\n        updateStateAfterNewMessage,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(Messenger);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n//Styles:\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button';\n\nconst MainCardContainer = styled.div`\n    margin-top: 10px;\n    margin-bottom: 10px;\n    background-color: white;\n    padding: 10px 10px;\n    border: 1px solid #f9f9f9;\n    border-radius: 5px;\n    box-shadow:\n        0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n        0 12.5px 10px rgba(0, 0, 0, 0.06),\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n        0 60px 40px rgba(0, 0, 0, 0.12);\n    \n`\n\nconst CardInfoContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: center;\n`\nconst LinkContainer = styled.div`\n    display: flex;\n`\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    margin-left: 6px;\n    margin-right: 6px;\n`\n\nconst StyledTitle = styled.p`\n    margin: 0;\n    font-size: 20px;\n    font-family: 'Nunito', sans-serif;\n    font-weight: 600;\n\n`\n\nconst BioNoteCard = ({ name }) => {\n    return (\n        <MainCardContainer>\n            <CardInfoContainer>\n                <StyledTitle>{name}</StyledTitle>\n                <LinkContainer>\n                    <ButtonGroup size='lg' className='mb-2'>\n                        <StyledLink to={`/readbionote/${name}`}>\n                            <Button variant='success'>\n                                Read\n                            </Button>\n                        </StyledLink>\n                        <StyledLink to={`/editbionote/${name}`}>\n                            <Button variant='warning'>\n                                Edit\n                            </Button>\n                        </StyledLink>\n                        <StyledLink to={`/deletebionote/${name}`}>\n                            <Button variant='danger'>\n                                Delete\n                            </Button>\n                        </StyledLink>\n                    </ButtonGroup>\n                </LinkContainer>\n            </CardInfoContainer>\n        </MainCardContainer>\n    )\n}\n\n/*Todo Implementations:\n1. Add View button --> Renders out bionote with formatting\n2. Add Delete button \n3. Add Edit button --> Opens editor with button with text + formatting + button for saving.\n\n*/\n\nexport default BioNoteCard;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport { getBioNotes } from '../../../redux/userBioNote/bionoteActions';\nimport styled from 'styled-components';\n\n//Components:\nimport BioNoteCard from './BioNoteCard';\n\n//Styles:\nimport { Button } from 'react-bootstrap';\nimport { PencilSquare } from '@styled-icons/bootstrap/PencilSquare';\n\n\nconst HeaderContainer = styled.div`\n    text-align: center;\n`\n\nconst ButtonContainer = styled.div`\n    text-align: center;\n    margin-top: 5px;\n    margin-bottom: 20px;\n`\n\nconst PencilIcon = styled(PencilSquare)`\n    height: 20px;\n    width: 20px;\n    vertical-align: sub;\n    margin-left: 7px;\n`\n\nconst MainHeader = styled.h1`\n    margin: 0;\n    font-weight: 900;\n    font-size: 60px;\n    padding-top: 10px;\n    padding-right: 10px;\n    padding-left: 10px;\n    margin-bottom: 30px;\n    color: #293241;\n    font-family: 'Catamaran', sans-serif;\n`\n\nconst NoteCardContainer = styled.div`\n    padding-top: 20px;\n    padding-bottom: 20px;\n    padding-left: 50px;\n    padding-right: 50px;\n`\n\n//Render:\n\nconst CreateBioNote = ({ bionotes, getBioNotes }) => {\n\n    useEffect(() => {\n        getBioNotes();\n    },[]);\n\n    const renderNotes = () => (\n        bionotes.map(note => (\n            <BioNoteCard key={uuid()} name={note.bioName} />\n        ))\n    )\n\n    return (\n        <>\n            <HeaderContainer>\n                <MainHeader>Your Bio-Notes</MainHeader>\n            </HeaderContainer>\n            <ButtonContainer>\n                    <Link to='newbionote'>\n                        <Button variant='primary'>\n                            Create a New BioNote\n                            <PencilIcon />\n                        </Button>\n                    </Link>\n            </ButtonContainer>\n            <NoteCardContainer>\n                {renderNotes()}\n            </NoteCardContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        bionotes: state.bionotes.bionotes,\n    }\n}\n\n\nexport default connect(mapStateToProps, { getBioNotes })(CreateBioNote);\n","import api from '../../api';\nimport {\n    USER_ADD_BIONOTE,\n    USER_DELETE_BIONOTE,\n    USER_UPDATE_BIONOTE,\n    USER_GET_BIONOTES,\n} from './bionoteTypes';\nimport history from '../../historyObject';\n\nexport function createNewBioNote(bioName, submission) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const data = JSON.stringify(submission);\n\n        const response = await api.post('/users/bionote/create', { _id, bioName, data });\n\n        dispatch({\n            type: USER_ADD_BIONOTE,\n            payload: response.data.userNewBioNotesCollection.bionotes,\n        })\n\n        history.push('/createbionote');\n    }\n}\n\nexport function getBioNotes() {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post('/users/bionote/load', { _id });\n\n        dispatch({\n            type: USER_GET_BIONOTES,\n            payload: response.data.userExistingBioNotesCollection.bionotes,\n        })\n    } \n}\n\nexport function updateBioNote(bioName, updatedContent) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const data = JSON.stringify(updatedContent);\n\n        const response = await api.patch('/users/bionote/update', { _id, bioName, data })\n\n        dispatch({\n            type: USER_UPDATE_BIONOTE,\n            payload: response.data.updatedUserBioNoteCollection.bionotes,\n        });\n\n        history.push('/createbionote');\n    }\n}\n\nexport function deleteBioNote(bioName) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.patch('/users/bionote/delete', {_id, bioName});\n\n        dispatch({\n            type: USER_DELETE_BIONOTE,\n            payload: response.data.deletedUserBioNoteCollection.bionotes,\n        });\n\n        //history object to push to '/createbionote'\n        history.push('/createbionote');\n    }\n}","export const USER_ADD_BIONOTE = 'USER_ADD_BIONOTE';\nexport const USER_UPDATE_BIONOTE = 'USER_UPDATE_BIONOTE';\nexport const USER_DELETE_BIONOTE = 'USER_DELETE_BIONOTE';\nexport const USER_GET_BIONOTES = 'USER_GET_BIONOTES';","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { createNewBioNote } from '../../../redux/userBioNote/bionoteActions';\nimport { Link } from 'react-router-dom';\n\n//Editor imports:\nimport { Editor } from 'react-draft-wysiwyg';\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { EditorState, convertToRaw } from 'draft-js';\n\n//Styles:\n\nconst MainEditorContainer = styled.div`\n    padding: 50px 50px;\n`\n\n//Render:\n\n\nconst NewBioNote = ({ createNewBioNote }) => {\n\n    //Creating editor state for draftJS editor:\n    const [ editorState, setEditorState ] = useState(EditorState.createEmpty());\n\n    //Creating state for name input:\n    const [ bioName, setBioName ] = useState('');\n\n    const handleNameChange = e => {\n        setBioName(e.target.value);\n    }\n    \n\n    const handleEditorStateChange = editorState => {\n        setEditorState(editorState);\n    }\n\n    const onEditorSubmit = (e) => {\n        e.preventDefault();\n        createNewBioNote(bioName, convertToRaw(editorState.getCurrentContent()));\n    }\n\n\n    return (\n        <>\n            <MainEditorContainer>\n                <form onSubmit={onEditorSubmit}>\n                    <div>\n                        <label htmlFor='bionoteName'>Name of BioNote:  </label>\n                        <input\n                            name='bionoteName'\n                            type='text'\n                            placeholder='Enter Name..'\n                            value={bioName}\n                            onChange={handleNameChange}\n                        />\n                    </div>\n                    <div>\n                        <Editor\n                            editorState={editorState}\n                            toolbar={{\n                                inline: { inDropdown: true },\n                                textAlign: { inDropdown: true },\n                                image: { previewImage: true },\n                            }}\n                            onEditorStateChange={handleEditorStateChange}\n                        />\n                    </div>\n                    <button type='submit'>Submit BioNote</button>\n                </form>\n                <Link to='/createbionote'>View Your Existing BioNotes</Link>\n            </MainEditorContainer>\n        </>\n    )\n}\n\n/*\nThe main goal here is to:\n\n1. Learn how to save documents into mongoDB into each individual user.\n**WE ARE HERE**\n\nWe've now learned how to save the user's writing temporarily in the content state. We still need to create routing to our backend that will push this document into the user's stuff. \n\nhttps://www.youtube.com/watch?v=AgreDlNaUn4 @ timestamp 38:21 --> He's setting up the model necessary for creating the blog...--> this model is only necessary for when we 'share' the blogs to the people on the app.\n\n**Update: We've currently implemented basic routing and had our _id and contents/file array to be sent over to the backend. It remains unknown whether we can just store this content data 'as is' and then use it to render it back out onto the screen...\n\n**Update: We might have to ditch react-quill much to my dismay. The documentation is pretty nasty, and it doesn't really give good examples. I've found this to be better:\nhttps://jpuri.github.io/react-draft-wysiwyg/#/docs\n\n2. Learn how to load documents into the loading component \"createbionote\" --> perhaps a simple listing pattern?\n\n**Finished this--> Probably will take a break for now. I have stored the bionote information in my DB\nand re-rendered a simple system with all of my bionotes listed. 11/11/2020\n\nI have included buttons that are 'read', 'edit', and 'delete'. They link to components that will TAKE in the NAME of the bionote as a wildcard param, and using that, I should be able to render the bionote via:\nhttps://codepulse.blog/simple-easy-way-display-draft-js-content/\n\nand the edit/delete i'll probably need an action creator and a POST/PATCH request to the server.\n\n\n3. Learn how to grab HTML info from mongodb and re-render HTML document upon clicking it.. \n4. \n\n\n\n\n\n*/\n\nexport default connect(null, { createNewBioNote })(NewBioNote);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Editor, EditorState, convertFromRaw } from 'draft-js';\nimport { Link } from 'react-router-dom';\n\nconst ReadBioNote = ({ match:{params:{id}}, bionotes }) => {\n    \n    const [ editorState, setEditorState ] = useState(EditorState.createEmpty());\n\n    useEffect(() => {\n        renderBioNote();\n    },[]);\n\n    const renderBioNote = () => {\n        const currentNote = bionotes.bionotes.find(x => x.bioName === id);\n        const jsonCurrentNote = JSON.parse(currentNote.data);\n        const contentState = convertFromRaw(jsonCurrentNote);\n        const editorState = EditorState.createWithContent(contentState);\n        setEditorState(editorState);\n    }\n    \n    return (\n        <>\n            <Editor\n                editorState={editorState}\n                readOnly={true}\n            />\n            <div>\n                <Link to='/createbionote'>Go Back</Link>\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        bionotes: state.bionotes,\n    }\n}\n\nexport default connect(mapStateToProps)(ReadBioNote);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { updateBioNote } from '../../../redux/userBioNote/bionoteActions';\n\n//Editor Imports:\nimport { EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nconst EditBioNote = ({ match:{params:{id}}, bionotes, updateBioNote }) => {\n\n    const [ editorState, setEditorState ] = useState(EditorState.createEmpty());\n    const [ bioNoteName, setBioNoteName ] = useState('');\n\n    useEffect(() => {\n        setBioNoteName(id);\n        renderBioNote();\n    },[]);\n\n    const renderBioNote = () => {\n        const currentNote = bionotes.bionotes.find(x => x.bioName === id);\n        const jsonCurrentNote = JSON.parse(currentNote.data);\n        const contentState = convertFromRaw(jsonCurrentNote);\n        const editorState = EditorState.createWithContent(contentState);\n        setEditorState(editorState);\n    }\n\n    const handleEditorStateChange = editorState => {\n        setEditorState(editorState);\n    }\n\n    const onEditorSubmit = (e) => {\n        e.preventDefault();\n        updateBioNote(bioNoteName, convertToRaw(editorState.getCurrentContent()));\n    }\n\n    return (\n        <>\n            <div>\n                <form onSubmit={onEditorSubmit}>\n                    <Editor\n                        editorState={editorState}\n                        toolbar={{\n                            inline: { inDropdown: true },\n                            textAlign: { inDropdown: true },\n                            image: { previewImage: true },\n                        }}\n                        onEditorStateChange={handleEditorStateChange}\n                    />\n                    <div>\n                        <button type='submit'>Save Bionote</button>\n                    </div>\n                </form>\n            </div>\n            <Link to='/createbionote'>Go Back</Link>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        bionotes: state.bionotes,\n    }\n}\n\nexport default connect(mapStateToProps, { updateBioNote })(EditBioNote);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteBioNote } from '../../../redux/userBioNote/bionoteActions';\n\nconst DeleteBioNote = ({ match:{ params:{ id } }, deleteBioNote }) => {\n\n    const [ deleteInput, setDeleteInput ] = useState('');\n\n    const handleOnChange = e => {\n        e.preventDefault();\n        setDeleteInput(e.target.value);\n    }\n\n    const handleOnSubmit = e => {\n        e.preventDefault();\n        if (deleteInput.trim() === id.trim()) {\n            deleteBioNote(id);\n        } else {\n            alert(`Please enter this phrase exactly: '${id}'`);\n            setDeleteInput('');\n        }\n    }\n\n    return (\n        <>\n            <div>\n                <h1>Are you sure you want to delete: '{id}' ?</h1>\n                <h2>If you are absolutely certain, please type '{id}' in the box below:</h2>\n                <div>\n                    <form onSubmit={handleOnSubmit}>\n                        <input\n                            type='text'\n                            value={deleteInput}\n                            onChange={handleOnChange}\n                        />\n                        <div>\n                            <button type='submit'>I am sure!</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n}\n\n\nexport default connect(null, { deleteBioNote })(DeleteBioNote);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\n\nimport galactPhoto from '../../../Img/bgalact.png';\n\n//Styles:\nimport { MainHeader, SecondaryHeader } from '../../signupPage/SignUpForm';\n\nconst MainContainer = styled.div`\n    text-align: center;\n`\nconst SciToolsSecondaryHeader = styled(SecondaryHeader)`\n    margin: 0;\n    font-size: 30px;\n    font-weight: 300;\n`\nconst MainProgramContainer = styled.div`\n    margin: 20px 20px;\n    display: flex;\n    justify-content: center;\n`\nconst SubProgramContainer = styled.div`\n    background-color: salmon;\n`\nconst ProgramLink = styled(Link)`\n    text-decoration: none;\n\n    &:hover {\n        text-decoration: none;\n    }\n`\nconst StyledCard = styled(Card)`\n    box-shadow:\n        0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n        0 12.5px 10px rgba(0, 0, 0, 0.06),\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n        0 60px 40px rgba(0, 0, 0, 0.12);\n    ;\n    transition: all .3s ease-in-out;\n\n    &:hover {\n        transform: scale(1.1);\n    }\n`\n\n\nconst SciToolsLanding = () => {\n    return (\n        <>\n            <MainContainer>\n                <MainHeader>Your Sci-Tools</MainHeader>\n                <SciToolsSecondaryHeader>Please choose a program below</SciToolsSecondaryHeader>\n                <MainProgramContainer>\n                    <SubProgramContainer>\n                        <ProgramLink to='/scitools/lazylacz'>\n                            <StyledCard bg='dark' text='light' style={{ width: '15rem' }}>\n                                <Card.Img variant=\"top\" src={galactPhoto} style={{ width: '100%', height: '200px' }}/>\n                                <Card.Body>\n                                    <Card.Title bg='dark'>Lazy Lac-Z</Card.Title>\n                                    <Card.Text>\n                                        Otherwise known as the Beta-Galactosidase Assay.\n                                    </Card.Text>\n                                </Card.Body>\n                            </StyledCard>\n                        </ProgramLink>\n                    </SubProgramContainer>\n                </MainProgramContainer>\n            </MainContainer>\n        </>\n    )\n}\n\nexport default SciToolsLanding;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { editProtocolName } from '../../../redux/userLacZ/LacZActions'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl'\n\nconst EditModal = ({ editProtocolName, protocolId, renderProp, protocolName, renderCallBack }) => {\n\n    const [ show, setShow ] = useState(false);\n    const [ newProtocolName, setNewProtocolName] = useState('');\n\n    useEffect(() => {\n        if (renderProp) {\n            setShow(renderProp);\n        }\n    },[renderProp])\n\n    const handleClose = () => {\n        renderCallBack(false);\n        setShow(false);\n    }\n    const handleSaveChanges = () => {\n        editProtocolName(newProtocolName, protocolId);\n        renderCallBack(false);\n        setShow(false);\n    }\n\n    const handleFieldChange = e => {\n        e.preventDefault();\n        setNewProtocolName(e.target.value);\n    }\n\n    return (\n        <>\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                animation={true}\n                show={show}\n                onHide={handleClose}\n                backdrop='static'\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Change Your Protocol '{protocolName}'</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>New Protocol Name</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                        placeholder=\"BW25311..\"\n                        aria-label=\"Input your new Protocol name.\"\n                        onChange={handleFieldChange}\n                        />\n                    </ InputGroup>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSaveChanges}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default connect(null, { editProtocolName })(EditModal);\n","import api from '../../api';\nimport {\n    USER_ADD_PROTOCOL,\n    USER_DELETE_PROTOCOL,\n    USER_EDIT_NAME_PROTOCOL,\n    USER_GET_PROTOCOL,\n    USER_ADD_STRAIN_TO_COLLECTION,\n    USER_EDIT_STRAIN_IN_COLLECTION,\n    USER_REMOVE_STRAIN_FROM_COLLECTION,\n    USER_GET_STRAINS_FROM_COLLECTION,\n    USER_ADD_COLLECTION_DATA_TO_STRAIN,\n    USER_ADD_COLLECTION_PARSED_DATA_TO_STRAIN,\n    USER_ADD_LACZ_DATA_TO_STRAIN,\n} from './LacZTypes';\n\nexport function getProtocols() {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } }} } = getState();\n\n        const response = await api.post('/users/scitools/lacz/get', { _id });\n\n        dispatch({\n            type: USER_GET_PROTOCOL,\n            payload: response.data.laczAssayProtocols,\n        })\n    }\n}\n\nexport function addNewProtocols(protocolName) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post(`/users/scitools/lacz/add`, { protocolName, _id });\n\n        dispatch({\n            type: USER_ADD_PROTOCOL,\n            payload: response.data.laczAssayProtocols,\n        });\n    }\n}\n\nexport function editProtocolName(newProtocolName, currentProtocolId) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.patch(`/users/scitools/lacz/edit`, {newProtocolName, currentProtocolId, _id});\n\n        dispatch({\n            type: USER_EDIT_NAME_PROTOCOL,\n            payload: response.data.laczAssayProtocols,\n        });\n\n    }\n}\n\nexport function deleteProtocol(currentProtocolId) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post(`/users/scitools/lacz/delete`, {currentProtocolId, _id});\n\n        dispatch({\n            type: USER_EDIT_NAME_PROTOCOL,\n            payload: response.data.laczAssayProtocols,\n        });\n    }\n}\n\nexport function addStrainToCollection(collectionsObject, currentProtocolId) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post('/users/scitools/lacz/collection/addStrainToCollection', {\n            collectionsObject,\n            currentProtocolId,\n            _id\n        })\n\n        //Successfully appending modified strains to collectionStrains array. Just need to render the state of that on the screen using collectionStrains...do we even need a getallStrains()?? I don't think so.\n\n        dispatch({\n            type: USER_ADD_STRAIN_TO_COLLECTION,\n            payload: response.data.laczAssayProtocols,\n        })\n    }\n}\n\nexport function deleteStrainFromCollection(strainId, protocolId) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n        \n        const response = await api.post('/users/scitools/lacz/collection/deleteStrain', {\n            _id,\n            currentStrainId: strainId,\n            currentProtocolId: protocolId,\n        });\n\n        dispatch({\n            type: USER_REMOVE_STRAIN_FROM_COLLECTION,\n            payload: response.data.laczAssayProtocols,\n        })\n    }\n}\n\nexport function addCollectionInputDataToStrain(strainId, protocolId, inputArray) {\n    return async (dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post('/users/scitools/lacz/collection/addCollectionData', {\n            _id,\n            currentStrainId: strainId,\n            currentProtocolId: protocolId,\n            collectionData: inputArray,\n        })\n\n\n        dispatch({\n            type: USER_ADD_COLLECTION_DATA_TO_STRAIN,\n            payload: response.data.laczAssayProtocols,\n        })\n    }\n}\n\nexport function addCollectionChartParsedData(protocolId, newArray) {\n    return async(dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post('/users/scitools/lacz/collection/updateParsedData',{\n            _id,\n            currentProtocolId: protocolId,\n            parsedData: newArray,\n        })\n\n        dispatch({\n            type: USER_ADD_COLLECTION_PARSED_DATA_TO_STRAIN,\n            payload: response.data.laczAssayProtocols,\n        })\n    }\n}\n\nexport function addlacZDataToStrain(strainId, protocolId, lacZArray) {\n    return async(dispatch, getState) => {\n        const { auth: { userLogIn: { data: { _id } } } } = getState();\n\n        const response = await api.post('/users/scitools/lacz/laczdata/addLacZData', {\n            _id,\n            currentStrainId: strainId,\n            currentProtocolId: protocolId,\n            lacZData: lacZArray,\n        });\n\n        dispatch({\n            type: USER_ADD_LACZ_DATA_TO_STRAIN,\n            payload: response.data.laczAssayProtocols,\n        })\n    }\n}","//Protocol Variables:\n\nexport const USER_ADD_PROTOCOL = 'USER_ADD_PROTOCOL';\nexport const USER_DELETE_PROTOCOL = 'USER_DELETE_PROTOCOL';\nexport const USER_EDIT_NAME_PROTOCOL = 'USER_EDIT_NAME_PROTOCOL';\nexport const USER_GET_PROTOCOL = 'USER_GET_PROTOCOL';\n\n//Collection Strains Variables:\n\nexport const USER_ADD_STRAIN_TO_COLLECTION = 'USER_ADD_STRAIN_TO_COLLECTION';\nexport const USER_EDIT_STRAIN_IN_COLLECTION = 'USER_EDIT_STRAIN_IN_COLLECTION';\nexport const USER_REMOVE_STRAIN_FROM_COLLECTION = 'USER_REMOVE_STRAIN_FROM_COLLECTION';\nexport const USER_GET_STRAINS_FROM_COLLECTION = 'USER_GET_STRAINS_FROM_COLLECTION';\n\nexport const USER_ADD_COLLECTION_DATA_TO_STRAIN = 'USER_ADD_COLLECTION_DATA_TO_STRAIN';\nexport const USER_ADD_COLLECTION_PARSED_DATA_TO_STRAIN = 'USER_ADD_COLLECTION_PARSED_DATA_TO_STRAIN';\n\nexport const USER_ADD_LACZ_DATA_TO_STRAIN = 'USER_ADD_LACZ_DATA_TO_STRAIN';","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteProtocol } from '../../../redux/userLacZ/LacZActions'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nconst DeleteModal = ({ renderProp, renderCallBack, protocolName, protocolId, deleteProtocol }) => {\n\n    const [ show, setShow ] = useState(false);\n\n    useEffect(() => {\n        if (renderProp) {\n            setShow(renderProp);\n        }\n    },[renderProp])\n\n    const handleClose = () => {\n        renderCallBack(false);\n        setShow(false);\n    }\n\n    const handleDelete = () => {\n        deleteProtocol(protocolId);\n        renderCallBack(false);\n        setShow(false);\n    }\n\n    return (\n        <>\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                animation={true}\n                show={show}\n                onHide={handleClose}\n                backdrop='static'\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure you want to delete '{protocolName}'?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    By clicking 'Delete', all of your strain data in Collection and LacZ will also be deleted. There is no recovery.\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"danger\" onClick={handleDelete}>\n                        Delete\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default connect(null, { deleteProtocol })(DeleteModal);\n","import React, { useState } from 'react';\nimport EditModal from './EditModal';\nimport DeleteModal from './DeleteModal';\nimport { Link } from 'react-router-dom';\n\n//Styles:\nimport styled from 'styled-components';\nimport { AddCircle } from '@styled-icons/ionicons-solid/AddCircle';\nimport { MagnifyingGlass } from '@styled-icons/foundation/MagnifyingGlass'\nimport { Edit } from '@styled-icons/material/Edit';\nimport { DeleteForever } from '@styled-icons/material/DeleteForever';\n\nconst MainContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 10px;\n    margin-bottom: 10px;\n`\n\nconst MainCardContainer = styled.div`\n    background-color: white;\n    border: none;\n    border-radius: 5px;\n    width: 100%;\n    max-width: 800px;\n    margin: 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 15px 15px;\n    box-shadow:\n        0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n        0 12.5px 10px rgba(0, 0, 0, 0.06),\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n        0 100px 80px rgba(0, 0, 0, 0.12);\n;\n`\nconst HeaderContainer = styled.div`\n    display: block;\n`\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n`\nconst StyledButton = styled.button`\n    padding: 5px 5px;\n    margin-left: 5px;\n    margin-right: 5px;\n    background-color: rgba(6, 53, 95);\n    color: whitesmoke;\n    border: none;\n    border-radius: 5px;\n    font-family: 'Nunito', sans-serif;\n    font-size: 14px;\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n\n    &:hover {\n        background-color: rgba(6, 65, 117);\n    }\n`\n\nconst StyledEditButton = styled(StyledButton)`\n    background-color: rgb(0, 102, 0);\n    margin-bottom: 1px;\n    &:hover {\n        background-color: rgba(0, 118, 0);\n        text-decoration: none;\n    }\n\n\n`\nconst StyledDeleteButton = styled(StyledButton)`\n    background-color: rgb(127, 3, 0);\n    margin-bottom: 1px;\n    &:hover {\n        background-color: rgba(148, 0, 0);\n    }\n`\n\nconst StyledSpan = styled.span`\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n`\nconst StyledCircle = styled(AddCircle)`\n    width: 20px;\n    margin-right: 2px;\n`\nconst StyledMGlass = styled(MagnifyingGlass)`\n    width: 20px;\n    margin-right: 2px;\n`\nconst StyledEditIcon = styled(Edit)`\n    width: 20px;\n    margin-right: 2px;\n`\nconst StyledDeleteIcon = styled(DeleteForever)`\n    width: 20px;\n    margin-right: 2px;\n`\n\nconst TimeStampDesc = styled.h3`\n    position: absolute;\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    font-size: 10px;\n    text-align: left;\n`\n\n\nconst StyledCardHeader = styled.h2`\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    font-weight: 600;\n    font-size: 20px;\n    color: #293241;\n    text-align: left;\n    margin-bottom: 2px;\n`\n\n//Render:\n\nconst ProtocolCard = ({ protocolId, name, collection, lacZ, timeStamp }) => {\n\n    const [ renderModal, setRenderModal ] = useState(false);\n    const [ renderDeleteModal, setRenderDeleteModal ] = useState(false);\n\n    const renderCallBack = (boolean) => {\n        //Callback function for handling same state as edit modal..\n        setRenderModal(boolean);\n    }\n\n    const renderDeleteCallBack = boolean => {\n        setRenderDeleteModal(boolean);\n    }\n\n\n    const handleEditProtocolName = (e) => {\n        e.preventDefault();\n        //Turns on modal and registers user input as new input name.\n        setRenderModal(true);\n    }\n\n\n    const handleDeleteProtocol = (e) => {\n        e.preventDefault();\n        //Opens delete modal:\n\n        setRenderDeleteModal(true);\n    }\n\n    const renderCard = () => { \n        if (collection && lacZ) {\n            return (\n                <>\n                    <MainCardContainer>\n                        <HeaderContainer>\n                            <StyledCardHeader>{name}</StyledCardHeader>\n                            <TimeStampDesc>{timeStamp}</TimeStampDesc>\n                        </HeaderContainer>\n                        <ButtonContainer>\n                            <StyledEditButton onClick={handleEditProtocolName}>\n                                <StyledSpan>\n                                    <StyledEditIcon />\n                                    Edit\n                                </StyledSpan>\n                            </StyledEditButton>\n                            <StyledDeleteButton onClick={handleDeleteProtocol}>\n                                <StyledSpan>\n                                    <StyledDeleteIcon />\n                                    Delete\n                                </StyledSpan>\n                            </StyledDeleteButton>\n                            <Link to={`/scitools/lazylacz/collection/${protocolId}`}>\n                                <StyledButton>\n                                    <StyledSpan>\n                                        <StyledMGlass />\n                                        Collection\n                                    </StyledSpan>\n                                </StyledButton>\n                            </Link>\n                            <Link to={`/scitools/lazylacz/lacz/${protocolId}`}>\n                                <StyledButton>\n                                    <StyledSpan>\n                                        <StyledMGlass />\n                                        LacZ\n                                    </StyledSpan>\n                                </StyledButton>\n                            </Link>\n                        </ButtonContainer>\n                    </MainCardContainer>\n                    <EditModal\n                        renderProp={renderModal}\n                        protocolName={name}\n                        renderCallBack={renderCallBack}\n                        protocolId={protocolId}\n                    />\n                    <DeleteModal\n                        renderProp={renderDeleteModal}\n                        protocolName={name}\n                        renderCallBack={renderDeleteCallBack}\n                        protocolId={protocolId}\n                    />\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <MainCardContainer>\n                        <HeaderContainer>\n                        <StyledCardHeader>{name}</StyledCardHeader>\n                        <TimeStampDesc>{timeStamp}</TimeStampDesc>\n                        </HeaderContainer>\n                        <ButtonContainer>\n                            <StyledEditButton onClick={handleEditProtocolName}>\n                                <StyledSpan>\n                                    <StyledEditIcon />\n                                    Edit\n                                </StyledSpan>\n                            </StyledEditButton>\n                            <StyledDeleteButton onClick={handleDeleteProtocol}>\n                                <StyledSpan>\n                                    <StyledDeleteIcon />\n                                    Delete\n                                </StyledSpan>\n                            </StyledDeleteButton>\n                            <Link to={`/scitools/lazylacz/collection/${protocolId}`}>\n                                <StyledButton>\n                                    <StyledSpan>\n                                        <StyledCircle />\n                                        Collection\n                                    </StyledSpan>\n                                </StyledButton>\n                            </Link>\n                            <Link to={`/scitools/lazylacz/lacz/${protocolId}`}>\n                                <StyledButton>\n                                    <StyledSpan>\n                                        <StyledCircle />\n                                        LacZ\n                                    </StyledSpan>\n                                </StyledButton>\n                            </Link>\n                        </ButtonContainer>\n                    </MainCardContainer>\n                    <EditModal\n                        renderProp={renderModal}\n                        protocolName={name}\n                        renderCallBack={renderCallBack}\n                        protocolId={protocolId}\n                    />\n                    <DeleteModal\n                        renderProp={renderDeleteModal}\n                        protocolName={name}\n                        renderCallBack={renderDeleteCallBack}\n                        protocolId={protocolId}\n                    />\n                </>\n            )\n        }\n    }\n\n    return (\n        <MainContainer>\n            {renderCard()}\n        </MainContainer>\n    )\n}\n\nexport default ProtocolCard;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { addNewProtocols, getProtocols } from '../../../redux/userLacZ/LacZActions';\nimport ProtocolCard from './ProtocolCard';\n\n//Styles:\nimport { MainHeader, SecondaryHeader } from '../../signupPage/SignUpForm';\n\nconst MainContainer = styled.div`\n    text-align: center;\n    padding: 20px 20px;\n\n`\n\nconst InputContainer = styled.div`\n    display: flex;\n    padding: 20px 20px;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const StyledInput = styled.input`\n    width: 500px;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 6px;\n    box-sizing: border-box;\n    font-family: 'Nunito', sans-serif;\n`\n\nconst StyledButton = styled.button`\n    display: inline-block;\n    padding: .75rem 1.25rem;\n    border-radius: 5px;\n    color: #fff;\n    text-transform: uppercase;\n    font-size: 1rem;\n    transition: all .3s;\n    position: relative;\n    overflow: hidden;\n    z-index: 1;\n    margin-left: 20px;\n    margin-right: 20px;\n    border: none;\n    cursor: pointer;\n\n    &::before {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 0%;\n        height: 100%;\n        background-color: rgb(5, 145, 62);\n        transition: all .3s;\n        border-radius: 5px;\n        z-index: -1;\n    }\n\n    &::after {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgb(0, 121, 49);\n        border-radius: 5px;\n        z-index: -2;\n    }\n\n    &:hover {\n        color: #fff;\n    }\n\n    &:hover::before {\n        width: 100%;\n    }\n`\n\n\nconst LazyLacZ = ({ addNewProtocols, getProtocols, laczAssayProtocols }) => {\n\n    const [ protocolInput, setProtocolInput ] = useState('');\n\n    useEffect(() => {\n        getProtocols();\n    },[])\n\n    const handleProtocolSubmit = (e) => {\n        e.preventDefault();\n\n        if(protocolInput.trim() === '') {\n            alert('Please Enter A Value...')\n        } else {\n            addNewProtocols(protocolInput);\n            setProtocolInput('')\n        }\n    }\n\n    const handleInputChange = (e) => {\n        setProtocolInput(e.target.value);\n    }\n\n    const renderProtocols = () => (\n        laczAssayProtocols.map(protocol => (\n            <ProtocolCard \n                name={protocol.protocolName} \n                collection={protocol.collection}\n                lacZ={protocol.lacZ}\n                protocolId={protocol.protocolId}\n                key={protocol.protocolId}\n                timeStamp={protocol.timeStamp}\n            />\n        ))\n    )\n\n\n    return (\n        <>\n            <MainContainer>\n                <MainHeader>LacZ Assay</MainHeader>\n                <div>\n                    <SecondaryHeader>Protocol List</SecondaryHeader>\n                    <form onSubmit={handleProtocolSubmit}>\n                        <InputContainer>\n                            <div>\n                                <StyledInput \n                                    onChange={handleInputChange} \n                                    placeholder='Add new protocols...'\n                                    type='text'\n                                    value={protocolInput}\n                                    autoComplete='off'\n                                />\n                            </div>\n                            <div>\n                                <StyledButton type='submit'>\n                                    Add\n                                </StyledButton>\n                            </div>\n                        </InputContainer>\n                    </form>\n                    <div>\n                        {renderProtocols()}\n                    </div>\n                </div>\n            </MainContainer>\n        </>\n    )\n}\n\n/*Todo::\n1. Finish AddNewStrain and getAllStrain Controller functions in backend;\n2. Render Strains added to frontend via mapStateToProps\n3. These rendered Strains should have two buttons: Collection | LacZ \n^^^This is done.\n3.5. I need to add an edit and delete button for the strain name and entire strain..\n4. Maybe have a router route these buttons with the unique id of the strain sent from mongodb.\n^^^This means that we'll have a separate component for collection and lacZ, where the URL has mongo's unique_id where whatever we add we can use to search and update the strain in mongo.\n5. Of course, after the CRUD operations are all done we can then search for graphing packages to display a graph....and a way to save it (push to google drive? Download as pdf?)\n\n*/\nconst mapStateToProps = state => {\n    return {\n        laczAssayProtocols: state.laczAssayProtocols.laczProtocol\n    }\n}\n\n\n\nexport default connect(mapStateToProps, { addNewProtocols, getProtocols })(LazyLacZ);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteStrainFromCollection, addCollectionInputDataToStrain } from '../../../redux/userLacZ/LacZActions';\nimport styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport TimePicker from 'react-time-picker';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\n\n//Create a card with an input group--might have to add starting OD600 to the collection input card...\n\n//Styles:\n\nconst CardMainContainer = styled.div`\nmargin-top: 10px;\nmargin-bottom: 10px;\n`\n\n\nconst InputDivider = styled.div`\n    width: 300px;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    display: block;\n    text-align: center;\n`\n\nconst StyledInputHeader = styled.h4`\n    font-family: 'Nunito', sans-serif;\n    font-size: 20px;\n    font-weight: 600;\n`\n\nconst StyledLabel = styled.label`\n    font-family: 'Nunito', sans-serif;\n    font-weight: 100;\n    font-size: 17px;\n    margin-right: 10px;\n`\n\nconst StyledExistingCData = styled(StyledLabel)`\n    font-size: 16px;\n    font-weight: 800;\n    margin-left: 0;\n    margin-right: 0;\n    margin-top: 10px;\n    margin-bottom: 0px;\n    padding: 5px 5px;\n\n    @media (max-width: 1350px) {\n        font-size: 12px;\n    }\n\n    @media (max-width: 1200px) {\n        font-size: 8px;\n    }\n\n`\n\nconst BadgeDivider = styled.div`\n    display: block;\n    margin-top: 5px;\n    margin-bottom: 5px;\n`\n\nconst TimeInputDivider = styled.div`\n    display: flex;\n    height: 30px;\n    align-items: baseline;\n    margin-bottom: 10px;\n`\n\nconst SpacerButton = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n\n    @media (max-width: 1250px) {\n        display: inline-grid;\n    }\n`\nconst DividerButton = styled.div`\n    margin-left: 5px;\n    margin-right: 5px;\n\n    @media (max-width: 1250px) {\n        margin-top: 5px;\n        margin-bottom: 5px;\n    }\n`\nconst CollectionStrainCard = ({ name, pointNum, startTime, strainId, protocolId, deleteStrainFromCollection, addCollectionInputDataToStrain, collectionData, laczAssayProtocols }) => {\n\n    let [ collectionValue, setCollectionValue ] = useState([]);\n\n    const ownProtocol = laczAssayProtocols.find(item => item.protocolId === protocolId);\n    const ownStrain = ownProtocol.collectionStrains.find(strain => strain.strainId === strainId);\n\n    const renderExistingCollectionPoints = () => {\n        if (ownStrain.hasOwnProperty('collectionData')) {\n            return (\n                <>\n                    <Card.Subtitle className='mb-2 text-muted'>Existing Values for {(ownStrain.collectionData.length)}/{pointNum} Collection Points</Card.Subtitle>\n                        {ownStrain.collectionData.map(item =>(\n                            <BadgeDivider>\n                                <Badge variant='light'>\n                                    <StyledExistingCData>\n                                        Collection: {item.collectionNum} |||\n                                        OD600: {item.odValue} ||| \n                                        Time: {item.time}\n                                    </StyledExistingCData>\n                                </Badge>\n                            </BadgeDivider>\n                        ))}\n                </>\n            )\n        } else {\n            return (\n                <Card.Subtitle className='mb-2 text-muted'>Add data for the {pointNum} collection points.</Card.Subtitle>\n            )\n        }\n    }\n\n\n    const handleOnChange = (object) => {\n\n        const { name, value, number } = object;\n        let collectionInputs = [...collectionValue];\n\n        /*\n            1. Destructures, name, value, and number out.\n            2. Sets a variable to hold state array...\n            3. loops through variable array, and finds the object with the correct collection number--\n            if it DOESN'T find it, create a new object and insert.\n            4. After finding the correct collection number and determining whether to replace a value or--\n            create a new object, check the destructured 'name' value.\n            5. Depending on the name value, place or replace the value accordingly...\n\n        */\n\n        const targetIndex = collectionInputs.findIndex(input => input.collectionNum === number);\n\n        if (targetIndex === -1) {\n            if (name === 'time' && value !== null) {\n                let inputObjectTime = {\n                    collectionNum: number,\n                    time: value,\n                    odValue: '',\n                }\n\n                collectionInputs.push(inputObjectTime);\n                setCollectionValue(collectionInputs);\n            }\n\n            if(name === 'odValue' && value !== null) {\n                let inputObjectOD = {\n                    collectionNum: number,\n                    time: '',\n                    odValue: value,\n                }\n\n                collectionInputs.push(inputObjectOD);\n                setCollectionValue(collectionInputs);\n            }\n        } else if (targetIndex > -1 && value !== null) {\n            collectionInputs[targetIndex][name] = value;\n            setCollectionValue(collectionInputs);\n        }\n    }\n\n\n    const renderInputGroups = () => {\n        const count = parseInt(pointNum) + 1\n        let listNum = [];\n\n        for (let i = 1; i < count; i++) {\n            listNum.push(i);\n        }\n\n        return (\n            listNum.map(number => (\n                <InputDivider key={number}>\n                    <StyledInputHeader>Collection: {number}</StyledInputHeader>\n                    <TimeInputDivider>\n                        <StyledLabel>Collected at: </StyledLabel>\n                        <TimePicker\n                            onChange={(time) => handleOnChange({name: 'time', value: time, number})}\n                            disableClock={true}\n                            format='h:m a'\n                            key={number}\n                            name='time'\n                        />\n                    </TimeInputDivider>\n                    <InputGroup size='sm' className='mb-3'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\" >OD600</InputGroup.Text>\n                            <FormControl \n                                aria-label=\"Small\" \n                                aria-describedby=\"inputGroup-sizing-sm\" \n                                type='number' \n                                key={number} \n                                name='odValue'\n                                onChange={(e) => handleOnChange({ name:'odValue', value: e.target.value, number })} \n                            />\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                </InputDivider>\n            ))\n        )\n    }\n\n    const handleStrainDelete = () => {\n        deleteStrainFromCollection(strainId, protocolId);\n    }\n\n    const handleSaveCollectionData = () => {\n        addCollectionInputDataToStrain(strainId, protocolId, collectionValue);\n    }\n\n\n    return (\n        <>\n            <CardMainContainer>\n                <Card key={strainId}>\n                    <Card.Body>\n                        <Card.Title>{name}</Card.Title>\n                        {renderExistingCollectionPoints()}\n                        <SpacerButton>\n                            <DividerButton>\n                                <Button variant=\"danger\" size='sm'onClick={handleStrainDelete}>Delete</Button>\n                            </DividerButton>\n                            <DividerButton>\n                                <Button variant=\"success\"size='sm' onClick={handleSaveCollectionData}>Save</Button>\n                            </DividerButton>\n                            <DividerButton>\n                                <Dropdown drop='right'>\n                                    <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\" size='sm'>\n                                        Add Collection Data\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu>\n                                        {renderInputGroups()}\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                            </DividerButton>\n                        </SpacerButton>\n                    </Card.Body>\n                </Card>\n            </CardMainContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        laczAssayProtocols: state.laczAssayProtocols.laczProtocol\n    }\n\n}\n\nexport default connect(mapStateToProps, { deleteStrainFromCollection, addCollectionInputDataToStrain })(CollectionStrainCard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport CollectionStrainCard from './CollectionStrainCard';\n\n//Styles:\nimport { StyledMainHeader } from './Collection';\n\nconst StrainMainContainer = styled.div`\n    margin-top: 30px;\n    background-color: white;\n    border: 1px solid white;\n    border-radius: 10px;\n    padding-left: 40px;\n    padding-right: 40px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    text-align: center;\n    box-shadow:\n        0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n        0 12.5px 10px rgba(0, 0, 0, 0.06),\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n        0 60px 40px rgba(0, 0, 0, 0.12);\n`\n\n//Render:\n\nconst CollectionStrains = ({ ownProtocolStrains, protocolId }) => {\n\n    const renderStrains = () => {\n        if (ownProtocolStrains) {\n            return (\n                ownProtocolStrains.map(strain => (\n                    <>\n                        <CollectionStrainCard \n                            name={strain.strainName}\n                            pointNum={strain.collectionPoints}\n                            startTime={strain.startTime}\n                            strainId={strain.strainId}\n                            protocolId={protocolId}\n                            key={strain.strainId}\n                        /> \n                    </>\n                ))\n            )\n        } else {\n            return (\n                <div>\n                    Uh Oh. Nothing's here! Have you entered your strains?\n                </div>\n            )\n        }\n    }\n\n\n    return (\n        <>\n            <StrainMainContainer>\n                <StyledMainHeader>\n                    Your Strains\n                </StyledMainHeader>\n                {renderStrains()}\n            </StrainMainContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { ownProtocolId } = ownProps;\n    const ownProtocol = state.laczAssayProtocols.laczProtocol.find(item => item.protocolId === ownProtocolId)\n\n    return {\n        ownProtocolStrains: ownProtocol.collectionStrains,\n        protocolId: ownProtocolId,\n    }\n}\n\nexport default connect(mapStateToProps)(CollectionStrains);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Label, ResponsiveContainer } from 'recharts';\nimport { StyledMainHeader } from './Collection';\nimport Badge from 'react-bootstrap/Badge';\nimport { addCollectionChartParsedData } from '../../../redux/userLacZ/LacZActions';\nimport { Link } from 'react-router-dom';\n\n//Statistics:\nimport { linearRegression, linearRegressionLine, rSquared } from 'simple-statistics';\n\n//Styles:\n\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\nimport { ArrowRightSquareFill } from '@styled-icons/bootstrap/ArrowRightSquareFill';\n\n\nconst ChartMainContainer = styled.div`\n    text-align: center;\n`\n\n\nconst MainHeaderDivider = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst StyledMainButtonContainer = styled.div`\n    display: flex;\n    justify-content: space-around;\n`\n\nconst StyledButton = styled(Button)`\n    display: flex;\n    justify-content: flex-end;\n    margin-left: 6px;\n    margin-right: 6px;\n`\n\nconst ChartHeader = styled.h3`\n    margin: 0;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 25px;\n    font-weight: 900;\n    text-decoration: underline;\n\n`\n\nconst ResContainer = styled.div`\n    width: 100%;\n    padding: 10px 10px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    background-color: white;\n    border-radius: 5px;\n    filter: drop-shadow(0 0 2.7px black);\n`\n\nexport const StyledBadge = styled(Badge)`\n    padding: 6px 6px;\n    margin-top: 5px;\n    margin-left: 5px;\n    margin-right: 5px;\n    background-color: #2d2d7d;\n` \nconst TravelIcon = styled(ArrowRightSquareFill)`\n    height: 18px;\n    width: 18px;\n    margin-left: 7px;\n    vertical-align: middle;\n`\n\n//Render:\n\nconst CollectionCharts = ({ ownProtocolId, laczAssayProtocols, addCollectionChartParsedData }) => {\n\n    const ownProtocol = laczAssayProtocols.find(item => item.protocolId === ownProtocolId);\n\n    let parsedData;\n\n    if(ownProtocol.collectionStrains) {\n        parsedData = [...ownProtocol.collectionStrains];\n    }\n\n    //Calculate and create timeMinutes into parsedData object:\n\n    if (parsedData !== undefined) {\n        \n        let startTime;\n\n        for (let i = 0; i < parsedData.length; i++) {\n\n            startTime = parsedData[i].startTime.split(':').map(x => parseInt(x));\n\n            if (parsedData[i].collectionData) {\n\n                for (let j = 0; j < parsedData[i].collectionData.length; j++) {\n\n                    //Calculating timeMinutes:\n                    let timeSplit = parsedData[i].collectionData[j].time.split(':').map(x => parseInt(x));\n                    let minuteDifference = ((timeSplit[0] - startTime[0]) * 60) + timeSplit[1];\n                    parsedData[i].collectionData[j]['timeMinutes'] = minuteDifference.toString();\n                    \n                }\n\n            }\n        }\n\n        //Using new timeMinutes created in parsedData, create linearRegression and RSQ:\n        // if (parsedData.collectionData !== undefined) {\n            \n        for (let k = 0; k < parsedData.length; k++) {\n\n            let linearRegressionArray = [];\n            if (parsedData[k].collectionData !== undefined) {\n                for (let y = 0; y < parsedData[k].collectionData.length; y++) {\n\n                    let pairArray = [];\n                    pairArray.push(Math.log2(Number(parsedData[k].collectionData[y].timeMinutes)));\n                    pairArray.push(Number(parsedData[k].collectionData[y].odValue));\n\n\n                    linearRegressionArray.push(pairArray);\n                }\n\n                parsedData[k]['linearRegressionArray'] = linearRegressionArray;\n\n                const { m } = linearRegression(linearRegressionArray);\n                const regressionLine = linearRegressionLine(linearRegression(linearRegressionArray));\n                const rSquaredValue = rSquared(linearRegressionArray, regressionLine);\n\n\n                parsedData[k]['linearRegressionValueCollection'] = m;\n                parsedData[k]['doublingTime'] = (m * 100).toFixed(1);\n                parsedData[k]['rSquaredValueCollection'] = rSquaredValue.toFixed(3);\n\n            }\n        }\n    }\n\n    //Automatically dispatch parsedData to save item:\n\n    const handleUpdateDatabase = () => {\n\n        let results = [];\n\n        //Implement a check to see if parsedData has the new values:\n\n        if (parsedData) {\n            for (let i = 0; i < parsedData.length; i++) {\n                if (parsedData[i].doublingTime) {\n                    results.push(parsedData[i].doublingTime);\n                } \n            }\n\n            if (results.length > 0) {\n                addCollectionChartParsedData(ownProtocolId, parsedData);\n            } else {\n                return alert('Please input your collection data before saving to the database.');\n            }\n\n        }\n\n    }\n\n\n\n\n\n\n    const renderCharts = () => {\n        if (parsedData) {\n            return (\n                parsedData.map(item => (\n                    <>\n                        <ResContainer>\n                            <ChartHeader>{item.strainName}</ChartHeader>\n                            <div>\n                                <StyledBadge variant='dark'>\n                                    Calculated Doubling Time: {item.doublingTime} minutes\n                                </StyledBadge>\n                                <StyledBadge variant='dark'>\n                                    rSquaredValue: {item.rSquaredValueCollection}\n                                </StyledBadge>\n                                <StyledBadge variant='dark'>\n                                    Starting OD600: {item.startingOD} |||\n                                    Starting Time: {item.startTime}\n                                </StyledBadge>\n                            </div>\n                            <ResponsiveContainer aspect={2.1}>\n                                <LineChart width={550} height={400} data={item.collectionData} margin={{ top: 0, right: 20, left: 20, bottom: 40 }}>\n                                    <Line type=\"monotone\" dataKey=\"odValue\" stroke=\"#2d2d7d\" strokeWidth={2.5} />\n                                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                                    <XAxis dataKey=\"timeMinutes\">\n                                        <Label value='Minutes' position='bottom' style={{ textAnchor: 'middle' }} />\n                                    </XAxis>\n                                    <YAxis dataKey='odValue'>\n                                        <Label value='OD600 Value' position='left' angle={-90} style={{ textAnchor: 'middle' }} />\n                                    </YAxis>\n                                    <Tooltip />\n                                    <Legend verticalAlign=\"top\" height={50}/>\n                                </LineChart>\n                            </ResponsiveContainer>\n                        </ResContainer>\n                    </>\n                ))\n            )\n        } else {\n            return (\n                <div> Whoops! No strains = no charts <span role='img' aria-label='sweat-emoji'>😅 </span></div>\n            )\n        }\n    }\n\n\n    return (\n        <>\n            <ChartMainContainer>\n                <MainHeaderDivider>\n                    <StyledMainHeader>\n                        Your Charts\n                        <StyledMainButtonContainer>\n                            <StyledButton variant=\"primary\" size='sm' onClick={handleUpdateDatabase}>Send Charts To Database</StyledButton>\n                            <Link to={`/scitools/lazylacz/lacz/${ownProtocolId}`}>\n                                <StyledButton variant='secondary' size='sm'>\n                                    Lac-Z Data\n                                    <TravelIcon />\n                                </StyledButton>\n                            </Link>\n                        </StyledMainButtonContainer>\n                    </StyledMainHeader>\n                </MainHeaderDivider>\n                {renderCharts()}\n            </ChartMainContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        laczAssayProtocols: state.laczAssayProtocols.laczProtocol\n    }\n}\n\nexport default connect(mapStateToProps, { addCollectionChartParsedData })(CollectionCharts);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport TimePicker from 'react-time-picker';\nimport CollectionStrains from './CollectionStrains';\nimport {v4 as uuid} from 'uuid';\nimport { addStrainToCollection } from '../../../redux/userLacZ/LacZActions';\nimport CollectionCharts from './CollectionCharts';\nimport { Link } from 'react-router-dom';\n\n\n//Re-Chart:\n\n//Styles:\nimport { MainHeader, SecondaryHeader, StyledLabel } from '../../signupPage/SignUpForm';\nimport { StyledInput } from './LazyLacZ';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { BackspaceFill } from '@styled-icons/bootstrap/BackspaceFill';\n\nconst MainGridContainer = styled.div`\n    display: grid;\n    grid-template-columns: 37% 63%;\n    padding: 20px 20px;\n    column-gap: 10px;\n\n    @media (min-width: 1800px) {\n        grid-template-columns: 30% 70%;\n    }\n\n    @media (min-width: 2000px) {\n        grid-template-columns: 27% 73%;\n    }\n\n    @media (min-width: 2200px) {\n        grid-template-columns: 23% 77%;\n    }\n\n    @media (min-width: 2500px) {\n        grid-template-columns: 20% 80%;\n    }\n    \n`\nconst MainInputContainer = styled.div`\n    display: block;\n    max-width: 450px;\n    justify-self: center;\n\n    @media (min-width: 1600px) {\n        max-width: 600px;\n    }\n\n    @media (max-width: 1350px) {\n        max-width: 90%;\n        justify-self: center;\n    }\n`\n\nexport const CollectionContainer = styled.div`\n    background-color: white;\n    border: 1px solid white;\n    border-radius: 10px;\n    padding-left: 40px;\n    padding-right: 40px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    text-align: center;\n    box-shadow:\n        0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n        0 12.5px 10px rgba(0, 0, 0, 0.06),\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n        0 60px 40px rgba(0, 0, 0, 0.12);\n;\n`\n\nconst ChartContainer = styled(CollectionContainer)`\n    background-color: white;\n    padding-left: 20px;\n    padding-right: 20px;\n    justify-self: stretch;\n\n\n    @media (max-width: 1350px) {\n        max-width: 100%;\n        justify-self: center;\n    }\n\n    @media (min-width: 1600px) {\n        max-width: 100%;\n        justify-self: stretch\n    }\n`\nconst DetailInputContainer = styled.div`\n    margin-top: 20px;\n    display: block;\n    text-align: center;\n`\nconst StrainsContainer = styled.div`\n    display: block;\n    text-align: center;\n\n`\n\nconst StyledReturnIcon = styled(BackspaceFill)`\n    height: 22px;\n    width: 22px;\n    margin-right: 5px;\n`\n\nexport const StyledMainHeader = styled(MainHeader)`\n    font-size: 30px;\n    margin: 0px;\n    font-weight: 600;\n    padding: 0;\n`\n\nconst TimePickerDivider = styled.div`\n    margin: 10px 10px;\n`\nconst StyledLabelEdit = styled(StyledLabel)`\n    margin: 0;\n`\n\nconst StyledButton = styled(Button)`\n    margin-left: 5px;\n    margin-right: 5px;\n`\n\nconst StrainInput = styled(StyledInput)`\n    width: 100%;\n    margin-top: 5px;\n    height: 35px;\n    padding-left: 10px;\n`\n//Render:\n\nconst Collection = ({ ownProtocol, addStrainToCollection }) => {\n\n\n    const [ startTime, setStartTime ] = useState('');\n    const [ collectionPoints, setCollectionPoints ] = useState('');\n    const [ strainName, setStrainName ] = useState('');\n    const [ startingOD, setStartingOD ] = useState('');\n\n    //id == protocolId for mongoDB.\n    const { protocolName, protocolId, timeStamp } = ownProtocol;\n\n    const handleStartTimeChange = time => {\n        setStartTime(time);\n    }\n\n    const handleCollectionPointChange = number => {\n        setCollectionPoints(number.target.value);\n    }\n\n    const handleStrainNameChange = name => {\n        setStrainName(name.target.value);\n    }\n\n    const handleStartingODChange = number => {\n        setStartingOD(number.target.value);\n    }\n\n    const handleCollectionSubmit = e => {\n        e.preventDefault();\n\n        if (strainName !== '' && collectionPoints !== '' && startTime !== '') {\n            const collectionsObject = {\n                strainId: uuid(),\n                strainName,\n                collectionPoints,\n                startTime,\n                startingOD,\n            }\n\n            //send collectionsObject to action creator...\n            addStrainToCollection(collectionsObject, protocolId);\n\n        } else {\n            return alert('Please input values for the fields before submission.')\n        }\n\n        setStartTime('');\n        setCollectionPoints('');\n        setStrainName('');\n        setStartingOD('');\n    }\n\n    return (\n        <>\n            <MainGridContainer>\n                <MainInputContainer>\n                    <CollectionContainer>\n                    <StyledMainHeader>Collection: {protocolName}</StyledMainHeader>\n                        <DetailInputContainer>\n                            <form onSubmit={handleCollectionSubmit}>\n                                <div>\n                                    <StyledLabelEdit>Start Time: </StyledLabelEdit>\n                                    <TimePickerDivider>\n                                        <TimePicker\n                                            value={startTime}\n                                            onChange={handleStartTimeChange}\n                                            disableClock={true}\n                                            format='h:m a'\n                                        />\n                                    </TimePickerDivider>\n                                </div>\n                                <div>\n                                    <StyledLabelEdit>Starting OD600</StyledLabelEdit>\n                                    <StrainInput\n                                        onChange={handleStartingODChange}\n                                        value={startingOD}\n                                        type='number'\n                                    />\n                                </div>\n                                <div>\n                                    <StyledLabelEdit>Collection Points (Per Strain):</StyledLabelEdit>\n                                    <Form.Control\n                                        as=\"select\"\n                                        className=\"my-1 mr-sm-2\"\n                                        id=\"inlineFormCustomSelectPref\"\n                                        custom\n                                        onChange={handleCollectionPointChange}\n                                        value={collectionPoints}\n                                    >\n                                        <option value=\"0\">Choose...</option>\n                                        <option value=\"1\">One</option>\n                                        <option value=\"2\">Two</option>\n                                        <option value=\"3\">Three</option>\n                                        <option value=\"4\">Four</option>\n                                        <option value=\"5\">Five</option>\n                                        <option value=\"6\">Six</option>\n                                        <option value=\"7\">Seven</option>\n                                        <option value=\"8\">Eight</option>\n                                    </Form.Control>\n                                </div>\n                                <div>\n                                    <StyledLabelEdit>Strain Name:</StyledLabelEdit>\n                                    <StrainInput\n                                        onChange={handleStrainNameChange}\n                                        value={strainName}\n                                    />\n                                </div>\n                                <div>\n                                    <Link to='/scitools/lazylacz'>\n                                        <StyledButton variant='secondary'>\n                                            <StyledReturnIcon />\n                                            Return\n                                        </StyledButton>\n                                    </Link>\n                                    <StyledButton variant=\"primary\" type='submit'>\n                                        Submit\n                                    </StyledButton>\n                                    <StyledButton variant=\"warning\" type='reset'>\n                                        Reset\n                                    </StyledButton>\n                                </div>\n                            </form>\n                        </DetailInputContainer>\n                    </CollectionContainer>\n                    <StrainsContainer>\n                        <CollectionStrains ownProtocolId={protocolId} />\n                    </StrainsContainer>\n                </MainInputContainer>\n                <ChartContainer>\n                    <CollectionCharts ownProtocolId={protocolId} />\n                </ChartContainer>\n            </MainGridContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const ownProtocolId = ownProps.match.params.id;\n    const ownProtocol = state.laczAssayProtocols.laczProtocol.find(item => item.protocolId === ownProtocolId);\n\n\n    return {\n        ownProtocol,\n    }\n\n}\n\nexport default connect(mapStateToProps, { addStrainToCollection })(Collection);\n","import React from 'react';\nimport { linearRegression, linearRegressionLine, rSquared } from 'simple-statistics';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Label, ResponsiveContainer } from 'recharts';\nimport Badge from 'react-bootstrap/Badge';\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\n\n\n//Styles:\nimport {StyledBadge} from './CollectionCharts';\n\nconst MainChartContainer = styled.div`\n    display: grid;\n    grid-template-columns: 77% 23%;\n`\nconst FlexContainer = styled.div`\n    position: relative;\n`\n\nconst BadgeContainer = styled.div`\n    position: absolute;\n    top: 70%;\n    transform: translateY(-70%);\n`\n\nconst LacZBadge = styled(StyledBadge)`\n    background-color: #242746;\n    color: white;\n    filter: drop-shadow(0 0 1px black);\n`\n\n\n//Render:\nconst LacZChart = ({\n    ownStrain,\n    minute,\n    dilutionFactor,\n    volume,\n}) => {\n\n    let bgalParsedData;\n    let bgalConfiguredData = [];\n\n    if (ownStrain.lacZData !== null && ownStrain.lacZData !== undefined) {\n        bgalParsedData = {...ownStrain};\n    }\n\n    if (bgalParsedData !== null && bgalParsedData !== undefined) {\n        for (let j = 0; j < bgalParsedData.collectionData.length; j++) {\n            bgalConfiguredData.push({\n                collectionNum: bgalParsedData.collectionData[j].collectionNum,\n                od600value: bgalParsedData.collectionData[j].odValue,\n            })\n        }\n\n        for (let k = 0; k < bgalParsedData.lacZData.length; k++) {\n            const OD420 = bgalParsedData.lacZData[k].odValue420;\n            const OD550 = bgalParsedData.lacZData[k].odValue550;\n\n            const bgalUnit = ((1000 * (OD420 - 1.75 * OD550) * dilutionFactor)/(minute * volume));\n\n            bgalConfiguredData[k]['bgalUnit'] = bgalUnit;\n        }\n    }\n\n    let linearRegressionArray = [];\n\n    for (let x = 0; x < bgalConfiguredData.length; x++) {\n\n        if (bgalConfiguredData[x] !== undefined) {\n            let pairArray = [];\n            pairArray.push(Number(bgalConfiguredData[x].od600value));\n            pairArray.push(bgalConfiguredData[x].bgalUnit);\n\n            linearRegressionArray.push(pairArray);\n        }\n\n    }\n\n    bgalConfiguredData['lacZLinearRegressionArray'] = linearRegressionArray;\n\n    const { m } = linearRegression(linearRegressionArray);\n    const regressionLine = linearRegressionLine(linearRegression(linearRegressionArray));\n    const rSquaredValue = rSquared(linearRegressionArray, regressionLine);\n\n    bgalConfiguredData['linearRegressionValueLacZ'] = m;\n    bgalConfiguredData['rSquaredValueLacZ'] = rSquaredValue.toFixed(3);\n\n    console.log(bgalConfiguredData);\n\n\n    return (\n        <>\n            <MainChartContainer>\n                <ResponsiveContainer aspect={2.1}>\n                    <LineChart width={400} height={350} data={bgalConfiguredData} margin={{ top: 0, right: 20, left: 30, bottom: 40 }}>\n                        <Line type=\"monotone\" dataKey=\"bgalUnit\" stroke=\"#2d2d7d\" strokeWidth={2.5} />\n                        <CartesianGrid stroke=\"#9f9d9d\" strokeDasharray=\"5 5\" />\n                        <XAxis dataKey=\"od600value\">\n                            <Label value='OD-600 Value' position='bottom' style={{ textAnchor: 'middle' }} />\n                        </XAxis>\n                        <YAxis dataKey='bgalUnit'>\n                            <Label value='B-Galactosidase Units' position='left' angle={-90} style={{ textAnchor: 'middle' }} />\n                        </YAxis>\n                        <Tooltip />\n                        <Legend verticalAlign=\"top\" height={40}/>\n                    </LineChart>\n                </ResponsiveContainer>\n                <FlexContainer>\n                    <BadgeContainer>\n                        <LacZBadge variant='light'>\n                            Linear Regression: {bgalConfiguredData.linearRegressionValueLacZ.toFixed(3)}\n                        </LacZBadge>\n                        <LacZBadge variant='light'>\n                            rSquaredValue: {bgalConfiguredData.rSquaredValueLacZ}\n                        </LacZBadge>\n                    </BadgeContainer>\n                </FlexContainer>\n            </MainChartContainer>\n        </>\n    )\n}\n\nexport default LacZChart;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport { v4 as uuid } from 'uuid';\nimport { addlacZDataToStrain } from '../../../redux/userLacZ/LacZActions';\nimport LacZChart from './LacZChart';\n\n//Styles:\nconst MainCardContainer = styled.div`\n    display: grid;\n    grid-template-columns: 30% 70%;\n    margin-top: 30px;\n    background-color: white;\n    border: 1px solid white;\n    border-radius: 5px;\n    padding: 10px 10px;\n    text-align: center;\n    box-shadow:\n        0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n        0 12.5px 5px rgba(0, 0, 0, 0.06),\n        0 22.3px 10px rgba(0, 0, 0, 0.072),\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n        0 60px 80px rgba(0, 0, 0, 0.12);\n    ;\n`\n\nconst MainInputContainer = styled.div`\n    padding: 10px 10px;\n    background-color: #242746;\n    border: none;\n    border-radius: 5px;\n`\n\nconst InputHeader = styled.h2`\n    font-family: 'Nunito', sans-serif, Arial, Helvetica;\n    font-weight: 500;\n    font-size: 30px;\n    color: white;\n`\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n    margin-bottom: 10px;\n`\nconst ButtonDivider = styled.div`\n    margin-left: 5px;\n    margin-right: 5px;\n`\nconst BadgeDivider = styled.div`\n    margin-top: 5px;\n    margin-bottom: 5px;\n`\n\nconst InputGroupContainer = styled.div`\n    text-align: center;\n    padding: 10px 10px;\n    width: 270px;\n`\n\nconst InputGroupHeaderContainer = styled.div`\n    text-align: center;\n`\n\nconst StyledExistingCData = styled.div`\n    color: #242746;\n`\n\nconst MainChartRenderingContainer = styled.div`\n    background-color: white;\n`\n\n\n//Render:\nconst LacZCards = ({\n    minute,\n    dilutionFactor,\n    volume,\n    ownProtocolId,\n    ownStrainId,\n    ownStrainName,\n    collectionData,\n    addlacZDataToStrain,\n    laczAssayProtocols,\n}) => {\n\n    const [lacZValue, setLacZValue] = useState([]);\n\n    const ownProtocol = laczAssayProtocols.find(item => item.protocolId === ownProtocolId)\n    const ownStrain = ownProtocol.collectionStrains.find(strain => strain.strainId === ownStrainId);\n\n\n    const renderInputGroups = () => {\n\n        return collectionData.map((collection, index) => (\n            <>\n                <InputGroupContainer>\n                    <InputGroupHeaderContainer>\n                        <h4>Collection {collection.collectionNum} </h4>\n                        <label>Collected OD600: {collection.odValue} </label>\n                    </InputGroupHeaderContainer>\n                    <InputGroup size='sm' className='mb-3'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\" >OD420</InputGroup.Text>\n                            <FormControl \n                                aria-label=\"Small\" \n                                aria-describedby=\"inputGroup-sizing-sm\" \n                                type='number' \n                                name='odValue420'\n                                onChange={(e) => handleOnChange({ name:'odValue420', value: e.target.value, number: index + 1})} \n                            />\n                        </InputGroup.Prepend>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-sm\" >OD550</InputGroup.Text>\n                            <FormControl \n                                aria-label=\"Small\" \n                                aria-describedby=\"inputGroup-sizing-sm\" \n                                type='number' \n                                name='odValue550'\n                                onChange={(e) => handleOnChange({ name:'odValue550', value: e.target.value, number: index + 1 })} \n                            />\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                </InputGroupContainer>\n            </>\n        ))\n    }\n\n    const handleOnChange = object => {\n        const { name, value, number } = object;\n        let lacZInputs = [...lacZValue];\n\n        const targetIndex = lacZInputs.findIndex(input => input.collectionNum === number);\n\n        if (targetIndex === -1) {\n            if(name === 'odValue420' && value !== null) {\n                let inputObjectOD420 = {\n                    collectionNum: number,\n                    odValue420: value,\n                }\n            \n            lacZInputs.push(inputObjectOD420);\n            setLacZValue(lacZInputs);\n\n            }\n\n            if(name === 'odValue550' && value !== null) {\n                let inputObjectOD550 = {\n                    collectionNum: number,\n                    odValue550: value,\n                }\n\n                lacZInputs.push(inputObjectOD550);\n                setLacZValue(lacZInputs);\n            }\n        } else if (targetIndex > -1 && value !== null) {\n            lacZInputs[targetIndex][name] = value;\n            setLacZValue(lacZInputs);\n        }\n    }\n\n    const handleSaveCollectionData = () => {\n        addlacZDataToStrain(ownStrainId, ownProtocolId, lacZValue);\n    }\n\n    const renderExistingLacZData = () => {\n        if (ownStrain.lacZData !== null && ownStrain.lacZData !== undefined) {\n            return (\n                <>\n                    <Card.Subtitle className='mb-2 text-white'>Existing Lac-Z Values for {(ownStrain.lacZData.length)}/{collectionData.length} Collection Points</Card.Subtitle>\n                        {ownStrain.lacZData.map(item =>(\n                            <BadgeDivider>\n                                <Badge variant='light'>\n                                    <StyledExistingCData>\n                                        Collection: {item.collectionNum} |||\n                                        OD420: {item.odValue420} ||| \n                                        OD550: {item.odValue550}\n                                    </StyledExistingCData>\n                                </Badge>\n                            </BadgeDivider>\n                        ))}\n                </>\n            )\n        } else {\n            return (\n                <Card.Subtitle className='mb-2 text-white'>Add Lac-Z data for the {ownStrain.collectionData.length} collection points.</Card.Subtitle>\n            )\n        }\n    }\n\n    const renderCharts = () => {\n\n        if (ownStrain.lacZData !== null && ownStrain.lacZData !== undefined) {\n            return (\n                <>\n                    <LacZChart\n                        ownStrain={ownStrain}\n                        minute={minute}\n                        dilutionFactor={dilutionFactor}\n                        volume={volume}\n                    />\n                </>\n            )\n        } else {\n            return (\n                <>\n                    Please add Lac-Z Data\n                </>\n            )\n        }\n    }\n\n    return (\n        <MainCardContainer>\n            <MainInputContainer>\n                <InputHeader>{ownStrainName}</InputHeader>\n                <div>\n                    {renderExistingLacZData()}\n                </div>\n                <ButtonContainer>\n                    <ButtonDivider>\n                        <Button variant=\"success\" size='sm' onClick={handleSaveCollectionData}>Save and Render</Button>\n                    </ButtonDivider>\n                    <ButtonDivider>\n                        <Dropdown drop='right'>\n                            <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\" size='sm'>\n                                Add Lac-Z Data\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                {renderInputGroups()}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </ButtonDivider>\n                </ButtonContainer>\n            </MainInputContainer>\n            <MainChartRenderingContainer>\n                {renderCharts()}\n            </MainChartRenderingContainer>\n        </MainCardContainer>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        laczAssayProtocols: state.laczAssayProtocols.laczProtocol,\n    }\n}\n\nexport default connect(mapStateToProps, { addlacZDataToStrain })(LacZCards);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LacZCards from './LacZCards';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n//Styles:\nimport { MainHeader, SecondaryHeader } from '../../signupPage/SignUpForm';\nimport { Button } from 'react-bootstrap';\nimport { ArrowLeftSquare } from '@styled-icons/bootstrap/ArrowLeftSquare';\n\nconst LacZMainContainer = styled.div`\n    padding: 20px 20px;\n    text-align: center;\n`\n\nconst HeaderContainer = styled.div`\n    text-align: center;\n`\n\nconst ReturnButtonContainer = styled.div`\n    display: flex;\n`\n\nconst ArrowIcon = styled(ArrowLeftSquare)`\n    height: 21px;\n    width: 21px;\n    margin-right: 7px;\n`\n\n//Render:\n\nconst LacZ = ({ laczAssayProtocols, match:{params:{id}} }) => {\n\n    const ownProtocol = laczAssayProtocols.find(x => x.protocolId === id);\n\n    const renderLacZCards = () => {\n        if (ownProtocol.collectionStrains !== null && ownProtocol.collectionStrains !== undefined) {\n            return ownProtocol.collectionStrains.map(strain => (\n                <LacZCards\n                    minute={1.333333}\n                    dilutionFactor={5}\n                    volume={0.05}\n                    ownProtocolId={ownProtocol.protocolId}\n                    ownStrainId={strain.strainId}\n                    ownStrainName={strain.strainName}\n                    collectionData={strain.collectionData}\n                />\n            ))\n        } else {\n            return (\n                <>\n                    <SecondaryHeader>\n                        Sorry! You haven't collected any strains yet. Try to do that before running the LacZ assay. It's the first step, after all.\n                    </SecondaryHeader>\n                    <Link to={`/scitools/lazylacz/collection/${id}`}>\n                        <Button variant='primary' size='lg'>Navigate To Collection Area</Button>\n                    </Link>\n                </>\n            )\n        }\n    }\n\n\n    return (\n        <LacZMainContainer>\n            <HeaderContainer>\n                <MainHeader>LacZ Data Collection</MainHeader>\n                <ReturnButtonContainer>\n                    <Link to='/scitools/lazylacz'>\n                        <Button variant='dark'>\n                            <ArrowIcon />\n                            My Protocols\n                        </Button>\n                    </Link>\n                </ReturnButtonContainer>\n            </HeaderContainer>\n            <div>\n                {renderLacZCards()}\n            </div>\n        </LacZMainContainer>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        laczAssayProtocols: state.laczAssayProtocols.laczProtocol,\n    }\n}\n\nexport default connect(mapStateToProps)(LacZ);\n","//Dependencies\nimport React from 'react';\nimport { Switch, Router, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { v4 as uuid } from 'uuid';\n \n//Components\nimport Navbar from './landingPage/Navbar';\nimport MainLandingPage from './landingPage/MainLandingPage';\nimport SignUpForm from './signupPage/SignUpForm';\nimport history from '../historyObject';\nimport LoginForm from '../components/loginPage/LoginForm';\nimport Logout from '../components/Logout';\n\n//Authentication Component:\nimport AuthenticatedComponents from '../components/authComponents/AuthenticatedComponents';\n\n//Authenticated Components:\nimport MainDashboard from '../components/Dashboard/homePage/MainDashboard';\nimport Calendar from './Dashboard/calendar/Calendar';\nimport Meetings from '../components/Dashboard/Meetings';\nimport Messenger from '../components/Dashboard/messenger/Messenger';\nimport CreateBioNote from '../components/Dashboard/bioNotes/CreateBioNote';\nimport NewBioNote from '../components/Dashboard/bioNotes/NewBioNote';\nimport ReadBioNote from '../components/Dashboard/bioNotes/ReadBioNote';\nimport EditBioNote from '../components/Dashboard/bioNotes/EditBioNote';\nimport DeleteBioNote from '../components/Dashboard/bioNotes/DeleteBioNote';\nimport SciToolsLanding from './Dashboard/sciTools/SciToolsLanding';\nimport LazyLacZ from './Dashboard/sciTools/LazyLacZ';\nimport Collection from './Dashboard/sciTools/Collection';\nimport LacZ from './Dashboard/sciTools/LacZ';\n\n//Styling:\n\nconst AppContainer = styled.div`\n    background-color: #F6F9FC;\n`\nconst DashboardContainer = styled.div`\n    margin-left: 83.9375px;\n    padding: 0px;\n`\n\n\nconst App = () => {\n\n    return (\n        <>\n            <AppContainer>\n                <Router history={history}>\n                    <Navbar />\n                    <Switch>\n                        <Route exact path='/' component={MainLandingPage} />\n                        <Route exact path='/signup' component={SignUpForm} />\n                        <Route exact path='/login' component={LoginForm} />\n                        <AuthenticatedComponents>\n                            <DashboardContainer>\n                                <Route exact path='/dashboard' component={MainDashboard} />\n                                <Route exact path='/calendar' component={Calendar} />\n                                <Route exact path='/meetings' component={Meetings} />\n                                <Route exact path='/messenger' component={Messenger} />\n                                <Route exact path='/createbionote' component={CreateBioNote} />\n                                <Route exact path='/logout' component={Logout} />\n                                <Route exact path='/newbionote' component={NewBioNote} />\n                                <Route exact path='/readbionote/:id' component={ReadBioNote} />\n                                <Route exact path='/editbionote/:id' component={EditBioNote} />\n                                <Route exact path='/deletebionote/:id' component={DeleteBioNote} />\n                                <Route exact path='/scitools' component={SciToolsLanding} />\n                                <Route exact path='/scitools/lazylacz' component={LazyLacZ} />\n                                <Route exact path='/scitools/lazylacz/collection/:id' component={Collection} />\n                                <Route exact path='/scitools/lazylacz/lacz/:id' component={LacZ} />\n                            </DashboardContainer>\n                        </AuthenticatedComponents>\n                    </Switch>\n                </Router>\n            </AppContainer>\n        </>\n    )\n}\n\nexport default App;\n","import { USER_SIGN_UP } from '../userSignUp/userSignUpTypes';\nimport { USER_LOG_IN } from '../userLogin/userLoginTypes';\n\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case USER_SIGN_UP:\n            return {...state, userSignUp: action.payload};\n        case USER_LOG_IN:\n            return {...state, userLogIn: action.payload};\n        default:\n            return state;\n    }\n}","import { USER_CHAT_RECEIVED, USER_CHAT_REQUEST } from './chatTypes';\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case USER_CHAT_REQUEST:\n            return {...state, chatLogs: action.payload }\n        case USER_CHAT_RECEIVED:\n            return {...state, chatLogs: action.payload } //This is working fine...\n        default:\n            return state;\n    }\n}","import { USER_NEW_TASK, USER_GET_TASKS, USER_DELETED_TASK } from './userTaskLogTypes';\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case USER_NEW_TASK:\n            return {...state, Tasks: action.payload};\n        case USER_GET_TASKS:\n            return {...state, Tasks: action.payload};\n        case USER_DELETED_TASK:\n            return {...state, Tasks: action.payload};\n        default:\n            return state;\n    }\n}","import { USER_GET_NEWS } from './sciNewsTypes';\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case USER_GET_NEWS:\n            return {...state, news: action.payload};\n        default:\n            return state;\n    }\n}","import {\n    USER_ADD_BIONOTE,\n    USER_DELETE_BIONOTE,\n    USER_UPDATE_BIONOTE,\n    USER_GET_BIONOTES,\n} from './bionoteTypes';\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case USER_ADD_BIONOTE:\n            return {...state, bionotes: action.payload};\n        case USER_GET_BIONOTES:\n            return {...state, bionotes: action.payload};\n        case USER_DELETE_BIONOTE:\n            return {...state, bionotes: action.payload};\n        case USER_UPDATE_BIONOTE:\n            return {...state, bionotes: action.payload};\n        default:\n            return state;\n    }\n}","import {\n    USER_ADD_EVENT,\n    USER_GET_EVENTS,\n    USER_UPDATE_EVENT,\n    USER_DELETE_EVENT,\n} from './calendarTypes';\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case USER_ADD_EVENT:\n            return {...state, calendarEvents: action.payload};\n        case USER_GET_EVENTS:\n            return {...state, calendarEvents: action.payload};\n        case USER_UPDATE_EVENT:\n            return {...state, calendarEvents: action.payload};\n        case USER_DELETE_EVENT:\n            return {...state, calendarEvents: action.payload};\n        default:\n            return state;\n    }\n}","import {\n    USER_ADD_PROTOCOL,\n    USER_DELETE_PROTOCOL,\n    USER_EDIT_NAME_PROTOCOL,\n    USER_GET_PROTOCOL,\n    USER_ADD_STRAIN_TO_COLLECTION,\n    USER_EDIT_STRAIN_IN_COLLECTION,\n    USER_REMOVE_STRAIN_FROM_COLLECTION,\n    USER_GET_STRAINS_FROM_COLLECTION,\n    USER_ADD_COLLECTION_DATA_TO_STRAIN,\n    USER_ADD_COLLECTION_PARSED_DATA_TO_STRAIN,\n    USER_ADD_LACZ_DATA_TO_STRAIN,\n} from './LacZTypes';\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case USER_GET_PROTOCOL:\n            return {...state, laczProtocol: action.payload};\n        case USER_ADD_PROTOCOL:\n            return {...state, laczProtocol: action.payload};\n        case USER_DELETE_PROTOCOL:\n            return {...state, laczProtocol: action.payload};\n        case USER_EDIT_NAME_PROTOCOL:\n            return {...state, laczProtocol: action.payload};\n        case USER_ADD_STRAIN_TO_COLLECTION:\n            return {...state, laczProtocol: action.payload};\n        case USER_EDIT_STRAIN_IN_COLLECTION:\n            return {...state, laczProtocol: action.payload};\n        case USER_REMOVE_STRAIN_FROM_COLLECTION:\n            return {...state, laczProtocol: action.payload};\n        case USER_GET_STRAINS_FROM_COLLECTION:\n            return {...state, laczProtocol: action.payload};\n        case USER_ADD_COLLECTION_DATA_TO_STRAIN:\n            return {...state, laczProtocol: action.payload};\n        case USER_ADD_COLLECTION_PARSED_DATA_TO_STRAIN:\n            return {...state, laczProtocol: action.payload};\n        case USER_ADD_LACZ_DATA_TO_STRAIN:\n            return {...state, laczProtocol: action.payload};\n        default:\n            return state;\n    }\n}","import { combineReducers, createStore, compose, applyMiddleware } from 'redux';\nimport authReducer from './authReducer/authReducer';\nimport chatReducer from './chatMessaging/chatReducer';\nimport taskReducer from './userTaskLog/userTaskLogReducer';\nimport newsReducer from './sciNews/sciNewsReducer';\nimport bionotesReducer from './userBioNote/bionoteReducer';\nimport calendarReducer from './userCalendar/calendarReducer';\nimport lacZReducer from './userLacZ/LacZReducer';\nimport { reducer as formReducer } from 'redux-form';\nimport reduxThunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { persistReducer } from 'redux-persist';\n//Get localstorage on window browser--session storage also availiable:\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n    //key = point of storage inside reducer--start storing at root.\n    key: 'root',\n    storage,\n    whitelist: ['auth', 'chat', 'task', 'news', 'bionotes', 'calendarEvents', 'laczAssayProtocols']\n}\n\n//Creating Enhancers:\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//RootReducer:\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    form: formReducer,\n    chat: chatReducer,\n    task: taskReducer,\n    news: newsReducer,\n    bionotes: bionotesReducer,\n    calendarEvents: calendarReducer,\n    laczAssayProtocols: lacZReducer,\n});\n\n//Persisting formReducer:\nconst persistRootReducer = persistReducer(persistConfig, rootReducer);\n\n//Creating store with reducers and redux extension\nconst store = createStore(persistRootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\n//Persisted Version of store:\nconst persistor = persistStore(store);\n\nexport { store, persistor };","//Dependencies:\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n//Components\nimport App from './components/App';\nimport { store, persistor } from '../src/redux/store';\n\n//Normalize CSS\nimport 'normalize.css';\n\n\nrender(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}